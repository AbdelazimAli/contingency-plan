
@using System.Web.Script.Serialization
@using WebApp.Extensions

@{
    Layout = null;
    var admin = User.IsInRole("Admin");
    var compantId = User.Identity.GetDefaultCompany();
    var culture = User.Identity.GetCulture();
    var rtl = User.Identity.RTL();
    var version = Request.QueryString["Version"];
}

<script src="~/Scripts/typeahead.bundle.min.js"></script>
<script src="~/Scripts/cultures/lang.js"></script>

<div id="MeetingDiv"></div>
<script>
    var Employees=@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Employees));
    var Emps =@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Emps));
    var LocationId = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.LocationId));
    var Attendee =@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Attendee));
    var LocationType =[{id:1,name:"@MsgUtils.Instance.Trls("Inside Company")"},{id:2,name:"@MsgUtils.Instance.Trls("Outside Company")"}];
    $(function () {
        function MeetingAgenda(id,Level){
            $("div[name=AgendaSec]").html('<div id="AgendaDiv" class="form-group col-lg-12 col-md-12 col-sm-12"></div>');
            var gridname = "'AgendaDiv'";
            Grids.batchGrid({
                read: "@Url.Action("ReadAgenda", "Notification")?MeetingId=" + id,
                create: "@Url.Action("CreateAgenda", "Notification")" ,
                update: "@Url.Action("UpdateAgenda", "Notification")",
                destroy: "@Url.Action("DeleteAgenda", "Notification")",
                lang: "@User.Identity.GetCulture()",
                height: 300,
                objectName: "MeetingAgenda",
                admin: "@admin",
                columns: (Level == 1 ? [{ field: "Delete", input: "none"}]: [{ field: "Delete", input: ""}, { field: "StartTime", format: "{0:hh:mm tt}", editor: timeEditor },{ field: "EndTime", format: "{0:hh:mm tt}",parseFormats:"{0:hh:mm tt}", editor: timeEditor },{ field: "EmpId", values: Emps },{field:"Time",editable:false}]),
                select: { "EmpId": Emps },
                toolbar:Level==1 ? '<div></div>' :'<div><div style="@(rtl ? "float: right" : "float: left")"><a class="btn btn-default btn-sm glyphicon glyphicon-plus" onclick="Grids.addNewClick(' + gridname + ')" accesskey="s"><span>&nbsp;@MsgUtils.Instance.Trls("AddNewRecord")</span></a><a class="btn btn-default btn-sm glyphicon glyphicon-ban-circle" onclick="Grids.cancelClick(' + gridname + ')" accesskey="c"><span>&nbsp;@MsgUtils.Instance.Trls("CancelChanges")</span></a>&nbsp;&nbsp;<div class="btn-group" style="@(admin == false ? "display: none" : "")"><button type="button" class="btn btn-default btn-sm glyphicon glyphicon-cog dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span>&nbsp;</button><ul class="dropdown-menu"><li><a class="glyphicon glyphicon-floppy-save" onclick="Grids.saveGrid(' + gridname + ')"><span>&nbsp;&nbsp;&nbsp; @MsgUtils.Instance.Trls("SaveGrid")</span></a>&nbsp;&nbsp;</li></ul></div></div></div>',
                gridName: "AgendaDiv",

            });
        }
        function timeEditor(container, options) {
        $('<input data-text-field="' + options.field + '" data-value-field = "' + options.field + '"data-bind="value:' + options.field + '"data-format="' + options.format + '"/>')
            .appendTo(container)
            .kendoTimePicker();
    }
        var oldPage = localStorage.getItem("menuhigh").split(",");
        oldulr = $("#"+ oldPage[2] + " a").attr("href");

        var model = @Html.Raw((new JavaScriptSerializer()).Serialize(Model))
        var Language = lang.getList("@culture");

        var url = "@Url.Action("ReadFormInfo", "Pages")";
        var formId = "MeetingForm";

        var read = "@Request.QueryString["Read"]";
        var dataLevel= "@Request.QueryString["DataLevel"]";

        $.ajax({
            async: false,
            url: "@Url.Action("ReadFormInfo","Pages")",
            type: "GET",
            dataType: "json",
            contentType: 'application/json',
            data: { objectname: 'MeetingForm', version: "@Request.QueryString["Version"]", RoleId: "@Request.QueryString["RoleId"]" },
            success: function (data) {
                data.FormId = formId;
                data.TableName ="Meetings";
                data.FormAction = "@Url.Action("SaveMeeting", "Notification")";
                data.Culture = "@User.Identity.GetCulture()";
                data.rtl = @rtl.ToString().ToLower();
                data.companyId = "@User.Identity.GetDefaultCompany()";
                data.admin = "@admin";

                $("#MeetingDiv").Forms(data, model);
                MeetingAgenda(model.Id , dataLevel);
                FormJs.fillOptionsDynamic($("#" + formId), "MeetAttendee", null, model);
                FormJs.fillOptionsDynamic($("#" + formId), "EmpId", Employees, model,{ remoteTableName: "People"});
                FormJs.fillOptionsDynamic($("#" + formId), "LocationId", LocationId, model);
                FormJs.fillOptionsDynamic($("#"+formId),"LocationType",LocationType,model);
                $("#" + formId).find('#saveChanges').val('@MsgUtils.Instance.Trls("SaveChanges")');
                if(model.Id >0)
                {
                    $("#MeetAttendee").data("kendoMultiSelect").dataSource.data(Attendee);
                    var multiObject= $("#MeetAttendee").data("kendoMultiSelect");
                    multiObject.value(model.MeetingAttendee);
                }
                $("input[name='LocationType'][value='1']").attr('checked', true);
                $("#"+formId).find("#Location").closest(".form-group").css("display","none");

                $("input[name='LocationType']").change(function(){
                    var value = $("input[name='LocationType']:checked").val();
                    if(value == 1)
                    {
                        $("#"+formId).find("#Location").closest(".form-group").css("display","none");
                        $("#"+formId).find("#LocationId").closest(".form-group").css("display","");

                    }
                    else
                    {
                        $("#"+formId).find("#Location").closest(".form-group").css("display","");
                        $("#"+formId).find("#LocationId").closest(".form-group").css("display","none");

                    }

                })
                //$("div[name=SchedullarSec]").html('<div id="Scheduler" class="form-group col-lg-12 col-md-12 col-sm-12"></div>');
                //$("#Scheduler").kendoScheduler({

                //})

                //if($("#" + formId + " #EmpId").prop("type") == "text") $("#" + formId + " #EmpId").on('typeahead:select', empChanged);
                //else $("#" + formId).on('change',  "#EmpId", empChanged);
            },
            error: function (data) {
            }
        });

        //Grid

        $('#MeetingForm').on('click',"#backToIndex",null, function(){
            $("#renderbody").load(oldulr);
        });

        if(model.Id == 0)
            $("#MeetDate").data("kendoDatePicker").value("");

        $("#MeetingDiv").on('click',"#saveChanges",null, function (e) {
            FormJs.saveForm($("#"+formId), $(this), function () {
                toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                $("#renderbody").load(oldulr);
            },Grids.sendData("AgendaDiv"));
        });
    });


</script>




