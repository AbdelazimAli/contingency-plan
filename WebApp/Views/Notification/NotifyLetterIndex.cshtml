
@{
    var admin = User.Identity.CanCustomize();
    bool ssMenue = false;
    int dataLevel = 4, read = 0, Menuid = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    bool.TryParse(Request.QueryString["SSMenu"], out ssMenue);
    int.TryParse(Request.QueryString["Read"], out read);
    var rtl = User.Identity.RTL();
    Layout = null;
    int.TryParse(Request.QueryString["MenuId"], out Menuid);
}
@if (!ssMenue)
{
<div class="steps">
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#myNotify" aria-controls="myNotify" role="tab" data-toggle="tab">@MsgUtils.Instance.Trls("MyNotify")</a></li>
        <li role="presentation"><a href="#empNotifies" aria-controls="empNotifies" role="tab" data-toggle="tab">@MsgUtils.Instance.Trls("EmployeeNotifies")</a></li>
    </ul>
    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="myNotify">
            @Html.Partial("_RequestFilters", new ViewDataDictionary { { "GridName", "NotifyLetterGid" }, { "HasDepts", "false" }, { "hasRange", "false" } })
            @Html.Partial("MyNotifyLetters")
        </div>
        <div role="tabpanel" class="tab-pane" id="empNotifies">
            @Html.Partial("_RequestFilters", new ViewDataDictionary { { "GridName", "NotifyGidDiv" }, { "HasDepts", "false" }, { "hasRange", "false" } })
            @Html.Partial("EmployeesNotify")
        </div>
    </div>
</div>
}
else
{
    @Html.Partial("MyNotifyLetters")
}
<script>
    @*@if(ssMenue == false)
    $(".steps").remove();*@
</script>



  
@*<script type="text/x-kendo-template" id="template">
    <div style="@(rtl ? "float: right" : "float: left")">
        
        <div class="btn-group">
            <button type="button" class="btn btn-default glyphicon glyphicon-cog dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" id="toolsMenu">
                @if (admin)
                {
                    <li><a class="glyphicon glyphicon-floppy-save" onclick="Grids.saveGrid('NotifyLetterGid')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveGrid")</span></a></li>
                }
                <li><a class="glyphicon glyphicon-trash" onclick="Grids.resetGrid('NotifyLetterGid')"><span>&nbsp; @MsgUtils.Instance.Trls("ResetGrid")</span></a></li>
                @if (function != null && function.Length > 0)
                {
                    if (Array.Exists(function, f => f == "ExportExcel"))
                    {
                        <li><a class="fa fa-file-powerpoint-o" onclick="Grids.saveAsXsl('NotifyLetterGid')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveAsExcel")</span></a></li>
                    }
                    if (Array.Exists(function, f => f == "ExportPdf"))
                    {
                        <li><a class="fa fa-file-powerpoint-o" onclick="Grids.saveAsPdf('NotifyLetterGid')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveAsPDF")</span></a></li>
                    }
                }
            </ul>
        </div>
    </div>

</script>*@


