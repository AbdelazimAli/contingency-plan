
@{
    var admin = User.Identity.CanCustomize();
    bool ssMenue = false;
    int dataLevel = 4, read = 0, Menuid = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    bool.TryParse(Request.QueryString["SSMenu"], out ssMenue);
    int.TryParse(Request.QueryString["Read"], out read);
    var rtl = User.Identity.RTL();
    Layout = null;
    int.TryParse(Request.QueryString["MenuId"], out Menuid);
}
<div id="NotifyLetterGid"></div>
<script>
    RequestFilters.applyAllFilters([], {}, "NotifyLetterGid", "@Url.Action("GetEmpNotificationsLetters", "Notification")?MenuId=@Request.QueryString["MenuId"]");
    $(".btn.add").hide();
    var gridname = "NotifyLetterGid";
    Grids.indexGrid({
        read: "@Url.Action("GetMyNotificationsLetters", "Notification")?MenuId="+@Menuid,
        objectName: "NotificationsLetter",  // name of the page or table name used to create local db key
        gridName: "NotifyLetterGid",
        recordName: "Subject",
        admin: "@admin",
        lang: "@User.Identity.GetCulture()",
        columns: [
           { field: "Download",command:{
                text:'@MsgUtils.Instance.Trls("Download")',click:function(e){
                    var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
                    $.getJSON("/Notification/DownloadFile",{id:dataItem.Id},function(res){
                        if(res=="Ok"){
                            toastr.success('@MsgUtils.Instance.Trls("MessageRead")');
                        }else
                            toastr.warning('@MsgUtils.Instance.Trls("MessagealreadyRead")');
                    });
                }
            }}
        ],
       // sort: [{"field":"NotifyDate","dir":"asc"}],
        dataBound:function(){
           // var grid = $("#" + gridname).data("kendoGrid");
            var name = $("#" + this.gridName);
            name.find(".k-grid-Informed ").each(function (e) {
                var model = name.getKendoGrid().dataItem($(this).closest("tr"));
                if (model.read == true) {
                    $(this).addClass("AlreadyInformed");
                    $(this).click(ClickInforme);
                    $(this).prop("innerHTML", "@MsgUtils.Instance.Trls("Aleady Informed")");
                    $(this).attr("disabled", "disabled");
                }else
                {
                    $(this).attr("id", model.Id);
                    $(this).click(ClickInforme);
                    $(this).prop("innerHTML", "@MsgUtils.Instance.Trls("Informed")");
                }
            });

        }
    });
    function ClickInforme(e) {
        e.stopPropagation();
        e.preventDefault();
        var modelId = $(this).attr("id");
        var chkDisabled = $(this).attr("disabled");
        if(chkDisabled == "disabled"){
            return;
        }
        else
        {
            $.getJSON("/Notification/InformLetter",{id:modelId},function(res){
                console.log(res);
                if(res=="Ok")
                {
                    $('#NotifyLetterGid').data('kendoGrid').dataSource.read();
                    $('#NotifyLetterGid').data('kendoGrid').refresh();
                    toastr.success('@MsgUtils.Instance.Trls("MessageRead")');

                }
                else
                    toastr.error(res);
            });
        }
    }

</script>

