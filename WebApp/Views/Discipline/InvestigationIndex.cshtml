
@using WebApp.Extensions
@using System.Web.Script.Serialization

@{
    ViewBag.Title = "Index";
    Layout = null;
    var rtl = User.Identity.RTL();
    int dataLevel = 0, read = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);
    var admin = User.IsInRole("Admin");
    string[] function = ViewData["Functions"] as string[];
}

@Html.Partial("_RequestFilters", new ViewDataDictionary { { "HasDepts", "false" }, { "HasRange", "false" }, { "Functions", function }, { "TableName", "Investigations" } })
<div id="InvestigationDiv"></div>


<script>
    var addUrl = "@Url.Action("InvestigationDetails", "Discipline")";
    RequestFilters.ApplayAllFilters([], {}, "InvestigationDiv", "@Url.Action("ReadInvestigationDiscipline", "Discipline")?MenuId=@Request.QueryString["MenuId"]", addUrl);

    var ViolationId = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.investigations));
    Grids.indexGrid({
        read: "@Url.Action("ReadInvestigationDiscipline", "Discipline")?MenuId=@Request.QueryString["MenuId"]",
        show:"@Url.Action("InvestigationDetails", "Discipline")",
        edit: "@Url.Action("InvestigationDetails", "Discipline")",
        del: "@Url.Action("DeleteInvestigation", "Discipline")",
        objectName: "InvestigateDiscipline",  // name of the page or table name used to create local db key
        recordName: "Name", // custom delete message
        gridName: "InvestigationDiv",
        admin: "@admin",
        columns:[{field:"ViolationId",values:ViolationId}],
        toolbar:'<div></div>',
        select :{"ViolationId":ViolationId},
        lang: "@User.Identity.GetCulture()"
    });

</script>







