@using WebApp.Extensions
@using System.Web.Script.Serialization
@{
    Layout = null;
    var admin = User.IsInRole("Admin");
    int dataLevel = 4, read = 0;
    var rtl = User.Identity.RTL();
    var culture = User.Identity.GetCulture();
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);
    string[] function = ViewData["Functions"] as string[];
}

<br />
<div id="TermFollowUp"></div>

<script>
    var CancelReasons = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.CanselReasons));
    function drawForm(read) {
        var grid = $("#TermFollowUp").data("kendoGrid");

        if (grid.dataItem(grid.select()) != null)
            $.ajax({
                url: "@Url.Action("TermFollowUpDetails","Termination")?RoleId=@Request.QueryString["RoleId"]&Version=@Request.QueryString["Version"]&DataLevel=@Request.QueryString["DataLevel"]&Read="+read,
                data: { Id: grid.dataItem(grid.select()).Id },
             success: function (res) {
            $("#renderbody").empty();
            $("#renderbody").html(res);
        }, error: function () {

        }
    });
    else
            toastr.error("@MsgUtils.Instance.Trls("SelectRecord")");

    }
    var Res = [
         { value: 1, text: '@MsgUtils.Instance.Trls("Darft")' },
         { value: 2, text: '@MsgUtils.Instance.Trls("Submit")' },
         { value: 3, text: '@MsgUtils.Instance.Trls("AprovalEmployeeReview")' },
         { value: 4, text: '@MsgUtils.Instance.Trls("ManagerReview")' },
         { value: 5, text: '@MsgUtils.Instance.Trls("Accepted")' },
         { value: 6, text: '@MsgUtils.Instance.Trls("Approved")' },
         { value: 7, text: '@MsgUtils.Instance.Trls("Cancel before accepted")' },
         { value: 8, text: '@MsgUtils.Instance.Trls("Cancel after accepted")' },
         { value: 9, text: '@MsgUtils.Instance.Trls("Rejected")' }
    ];

    function Exist(data) {
        if (data.HasImage)
            return "url(../SpecialData/Photos/"+@User.Identity.GetDefaultCompany().ToString()+"/"+data.EmpId+".jpeg?dummy="+(new Date().getTime())+")"
        else
            return "url(/SpecialData/Photos/noimage.jpg)"
    }

    var columns = [
                    {
                        field: "Employee",
                        template: "<div class='k-people-photo' " +
                                        "style='background-image: #:Exist(data)# '></div>" +
                                        "&nbsp;&nbsp;&nbsp;<div class='k-people-name'>#:Employee#</div>",
                        locked:true

                    },
                  {
                      field: "ApprovalStatus", values: Res
                  }
    ];

    function showRequest() {
        drawForm(1);
    }
    function AcceptRefuFun() {
        drawForm(0);
    }
    function CancelReq() {

        var grid = $("#TermFollowUp").data("kendoGrid");
        if (grid.dataItem(grid.select()) != null) {
            FormJs.fillOptionsDynamic($("#bodyContainer"), "CancelReason", CancelReasons, null, {hasFilter: false});
               // $("#CancelReason").append("<option value='"+CancelReasons[i].id+"'>"+CancelReasons[i].name+"</option>");

            $("#TermCancel").modal("show");

        }else
            toastr.error("@MsgUtils.Instance.Trls("Select Record please!!!")");
    }
    function SendTo(value) {
        var grid = $("#TermFollowUp").data("kendoGrid");
        if (grid.dataItem(grid.select()) != null) {
            $.post("/Termination/SendTo", { Id: grid.dataItem(grid.select()).Id, Send: value, version: "@Request.QueryString["Version"]" }, function (res) {
                if (res == "Ok") {
                    toastr.success("@MsgUtils.Instance.Trls("Sended Successfully")");
                    grid.dataSource.read();
                    grid.refresh();
                } else toastr.error(res);
            });

        }else
            toastr.error("@MsgUtils.Instance.Trls("Select Record please!!!")");
    }
    var gridname = "'TermFollowUp'";

    var toolbar = '<div><div style="@(rtl ? "float: right" : "float: left")">'+
        '<a class="btn btn-default btn-sm fa fa-eye" onclick="showRequest()" style="@(dataLevel < 2 || read == 1 || ((function != null && function.Length>0)?!Array.Exists(function,f => f == "ShowRecord") :true)? "display:none" : "")" accesskey="s"><span>&nbsp;@MsgUtils.Instance.Trls("Show Record")</span></a>&nbsp;'+
        '<a class="btn btn-default btn-sm fa fa-thumbs-o-up" onclick="AcceptRefuFun()" style="@(dataLevel < 2 || read == 1 || ((function != null && function.Length > 0) ? !Array.Exists(function, f => f == "AcceptAndReject") : true) ? "display: none" : "")" accesskey="a"><span>&nbsp;@MsgUtils.Instance.Trls("Accept/Reject")</span></a>&nbsp;'+
        '<a class="btn btn-default btn-sm fa fa-male" onclick="SendTo(3)" style="@(dataLevel < 2 || read == 1 || ((function != null && function.Length > 0) ? !Array.Exists(function, f => f == "SendToEmp") : true) ? "display: none" : "")" accesskey="e"><span>&nbsp;@MsgUtils.Instance.Trls("SendToEmployee")</span></a>&nbsp;'+
        '<a class="btn btn-default btn-sm fa fa-user" onclick="SendTo(8)" style="@(dataLevel < 2 || read == 1 || ((function != null && function.Length > 0) ? !Array.Exists(function, f => f == "SendToManager") : true) ? "display: none" : "")" accesskey="m"><span>&nbsp;@MsgUtils.Instance.Trls("SendToManager")</span></a>&nbsp;'+
        '<a class="btn btn-default btn-sm fa fa-ban" onclick="CancelReq()" style="@(dataLevel < 2 || read == 1 || ((function != null && function.Length > 0) ? !Array.Exists(function, f => f == "CancelRequest") : true) ? "display: none" : "")" accesskey="c"><span>&nbsp;@MsgUtils.Instance.Trls("CancelRequest")</span></a>'+
        '&nbsp;&nbsp;<div class="btn-group"><button type="button" class="btn btn-default btn-sm fa fa-cog dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span>&nbsp;</button><ul class="dropdown-menu">@if (admin){<li><a class="glyphicon glyphicon-floppy-save" onclick="Grids.saveGrid(' + gridname + ')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveGrid")</span></a></li>}'+
        '@if (function != null && function.Length > 0){if (Array.Exists(function, f => f == "ExportExcel")){<li><a class="fa fa-file-powerpoint-o" onclick="Grids.saveAsXsl(' + gridname + ')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveAsExcel")</span></a></li>}if (Array.Exists(function, f => f == "ExportPdf")){<li><a class="fa fa-file-powerpoint-o" onclick="Grids.saveAsPdf(' + gridname + ')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveAsPDF")</span></a></li>}}' +
        '<li><a class="glyphicon glyphicon-trash" onclick="Grids.resetGrid(' + gridname + ')"><span>&nbsp; @MsgUtils.Instance.Trls("ResetGrid")</span></a></li> </ul></div></div>&nbsp;&nbsp;</div>';

    Grids.indexGrid({
        read: "@Url.Action("GetFollows", "Termination")?MenuId=@Request.QueryString["MenuId"]",
        objectName: "TermFollow",
        tabeName: "Terminations",
        recordName: "Employee",
        selectable: "row",
        gridName: "TermFollowUp",
        admin: "@admin",
        columns: columns,
        lang: "@User.Identity.GetCulture()",
        select: { "ApprovalStatus": Res },
        toolbar: toolbar
    });



    $("#TermCancel").on("click","#Ok",null,function(){
        var grid = $("#TermFollowUp").data("kendoGrid");
        $.post("/Termination/CancelReq", { Id: grid.dataItem(grid.select()).Id, Reason: $("#CancelReason").val(),Desc:$("#CancelDesc").val(), version: "@Request.QueryString["Version"]" }, function (res) {
            if (res == "Ok") {
                $("#TermCancel").modal("hide");
                toastr.success("@MsgUtils.Instance.Trls("Cancelled Successfully")");
                grid.dataSource.read();
                grid.refresh();
            } else toastr.error(res);
        });

    });
</script>

<div class="modal fade" id="TermCancel" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="true" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">@MsgUtils.Instance.Trls("CancelTermination")</h4>
            </div>
            <div id="bodyContainer" class="modal-body omegaform @(rtl?"rtl":"")" tabindex="0">
                <div class="set panel">
                    <div class="panel-body">
                        <div class="form-group row">
                            <label for="CancelReason" class="control-label col-sm-2 col-md-2 col-lg-2">
                                <span class="lblSpan">@MsgUtils.Instance.Trls("CancelReason")</span>
                            </label>
                            <div class="col-sm-10 col-md-10 col-lg-10">
                                <select allowed="true" name="CancelReason" isvisible="true" id="CancelReason" class="form-control k-valid" style="cursor: pointer;"></select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="CancelDesc" class="control-label col-sm-2 col-md-2 col-lg-2" >
                                <span class="lblSpan">@MsgUtils.Instance.Trls("CancelDescription")</span>
                            </label>
                            <div class="col-sm-10 col-md-10 col-lg-10">
                                <textarea name="CancelDesc" isvisible="true" rows="2" id="CancelDesc" class="form-control" style="max-width: 995px;"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="Cancel">@MsgUtils.Instance.Trls("Cancel")</button>
                <button type="button" class="btn btn-primary submit" accesskey="s" id="Ok">@MsgUtils.Instance.Trls("Ok")</button>
            </div>
        </div>
    </div>
</div>
