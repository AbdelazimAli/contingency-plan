@using System.Web.Script.Serialization
@using WebApp.Extensions
@model Model.ViewModel.Payroll.FormulaViewModel
@{
    Layout = null;
    var admin = User.IsInRole("Admin");
    var compantId = User.Identity.GetDefaultCompany();
    var culture = User.Identity.GetCulture();
    var rtl = User.Identity.RTL();
}

<div id="formulaDiv"></div>
<div id="docWindow"></div>
<link href="~/Content/forms.css" rel="stylesheet" />
<script src="~/Scripts/app/formula.js"></script>
<script>
    var formId = "formulaForm", url = "@Url.Action("ReadFormInfo", "Pages")", read = "@Request.QueryString["Read"]";

    var Basis = [{id: 1, name: '@MsgUtils.Instance.Trls("Hour")'}, {id: 2, name: '@MsgUtils.Instance.Trls("Day")'}, {id: 3, name: '@MsgUtils.Instance.Trls("Week")'}, {id: 4, name: '@MsgUtils.Instance.Trls("Month")'}, {id: 5, name: '@MsgUtils.Instance.Trls("Year")'}, {id: 6, name: '@MsgUtils.Instance.Trls("Period")'}],
        Result = [{id: 1, name: '@MsgUtils.Instance.Trls("Money")'}, {id: 2, name: '@MsgUtils.Instance.Trls("Units")'}, {id: 3, name: '@MsgUtils.Instance.Trls("Number")'}, {id: 4, name: '@MsgUtils.Instance.Trls("Result list")'}, {id: 5, name: '@MsgUtils.Instance.Trls("Message No")'}],
        FormType = [{id: 1, name: '@MsgUtils.Instance.Trls("Formula Text")'}, {id: 2, name: '@MsgUtils.Instance.Trls("Stored function")'}],
        Curr = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Curr)),
        InfoIds = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.InfoIds)),
        model = @Html.Raw((new JavaScriptSerializer()).Serialize(Model));

    var oldPage = localStorage.getItem("menuhigh").split(","), oldulr = $("#" + oldPage[2] + " a").attr("href");

    $.getJSON(url, { objectname: 'Formula', version: "@Request.QueryString["Version"]", RoleId: "@Request.QueryString["RoleId"]" }, function (data) {
        data.FormAction = "@Url.Action("Details", "Formula")";
        data.FormId = formId;
        data.Culture = '@culture';
        data.TableName = "Formulas";
        data.companyId = "@compantId";
        data.admin = '@admin';
        data.rtl = @rtl.ToString().ToLower();
        if(read == 1) data.mode = 'show';

        $("#formulaDiv").Forms(data, model);
        var myForm = $("#" + formId);

        FormJs.fillOptionsDynamic(myForm, "Basis", Basis, model, {hasFilter: false});
        FormJs.fillOptionsDynamic(myForm, "Result", Result, model, {hasFilter: false});
        FormJs.fillOptionsDynamic(myForm, "FormType", FormType, model, {hasFilter: false});
        FormJs.fillOptionsDynamic(myForm, "InfoId", InfoIds, model);
        FormJs.fillOptionsDynamic(myForm, "Curr", Curr, model);

        myForm.find("#FormType").change(typeChanged);
        function typeChanged() {
            var val = (read == 1 ? model.FormType : myForm.find("#FormType").val());
            if(val == 1) {
                myForm.find("#FormText").closest(".form-group").show();
                myForm.find("#StoredName").closest(".form-group").hide();
            } else if (val == 2) {
                myForm.find("#FormText").closest(".form-group").hide();
                myForm.find("#StoredName").closest(".form-group").show();
            } else
                myForm.find("#FormText, #StoredName").closest(".form-group").hide();
        };

        typeChanged();

        //-------------------Formula Text-------------------
        //myForm.on('blur', '#FormText', formulaTextFunc);
        //function formulaTextFunc() {
        //    var txt = $(this).val();
        //    Checker.InitialValues({columns: "EmpId"});
        //    var res = Checker.CheckFormula(txt);
        //    //console.log(res);
        //}
        //-------------------End Formula Text-------------------

        myForm.find('#saveChanges').val('@MsgUtils.Instance.Trls("SaveChanges")');
        myForm.find('#backToIndex').val('@MsgUtils.Instance.Trls("backToIndex")');

        var salaryItem = "@Request.QueryString["SalaryItem"]";
        if(salaryItem)
            oldulr = "@Url.Action("Details", "SalaryItem")?id=" + salaryItem+"&RoleId=@Request.QueryString["RoleId"]&Version=@Request.QueryString["Version"]&DataLevel=@Request.QueryString["DataLevel"]&Read=@Request.QueryString["Read"]";

        myForm.on('click', '#saveChanges', function() {
            FormJs.saveForm(myForm, $(this), function () {
                toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                $("#renderbody").load(oldulr);
            });
        });

        myForm.on('click', '#backToIndex', function() {
            $("#renderbody").load(oldulr);
        });

    });

</script>
