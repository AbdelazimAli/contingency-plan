@using WebApp.Extensions

@{
   
    var admin = User.IsInRole("Admin");
    var rtl = User.Identity.RTL();
    var grid = ViewData["GridName"];
    Layout = null;
    int dataLevel = 0, read = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);
}

<div id="branches"></div>


<script>
    var objectName = "CompanyBranches";

    Grids.batchGrid({
        read: "@Url.Action("ReadCompanyBranches", "Company", new { id = ViewBag.Id })",
        update: "@Url.Action("PutBranch", "Company")",
        create: "@Url.Action("CreateBranch", "Company")",
    destroy: "@Url.Action("DeleteBranch", "Company")",
    parentColumnName: "CompanyId", // hidden column that link master record with child record
    parentColumnId: @ViewBag.Id, // used to auto fill parentColumnName in parameters mapping
    admin: "@admin", // Admin role
    lang: "@User.Identity.GetCulture()",
    objectName: objectName, // name of the page or table name used to create local db key
    recordName: "Name", // custom delete message
    gridName: "branches",
    fields:{CreatedUser:{editable:false},CreatedTime:{editable:false},ModifiedUser:{editable:false},ModifiedTime:{editable:false}},
    //dataBound: function (e) {
    //    //  this.expandRow(this.tbody.find("tr.k-master-row").first());
    //    console.log(e.sender);
    //},
    columns:
        [
            {
                field: "Address", editor: addressEditor
            }
        ] // for customer editor, use fields to custom validations
    });


    var currentItem;

    function addressEditor(container, options) {

        var input = $('<textarea id="addDetails" rows="3" style="width: 90%; margin-bottom: 0; background: transparent; border: none" readonly maxlength="100"></textarea>');

        input.attr("name", options.field);

        input.appendTo(container);

        $('#addDetails').focus(function(e) {
            e.preventDefault();
            var url = $('#DetailsPopup').data('url');
            var id = options.model.AddressId || 0;
            currentItem = $("#branches").data("kendoGrid").dataItem($(e.currentTarget).closest("tr")).uid;

            //$('#bodyContainer').load(url, {addressId: id}, function(data) {
            //    $('#DetailsPopup').modal('show');
            //});
            $.get(url + "?Version=@Request.QueryString["Version"]", {addressId: id}, function(data) {
                $('#bodyContainer').html(data);
                $('#DetailsPopup').modal('show');

            });
        });

    }


     //Attach listener to Save changes so that when the button is pressed the modal dialog disappears
    $('#DetailsPopup').on('click', '#saveAddress', null, function () {
        FormJs.saveForm($("#AddressForm"), $(this), function(data) {
            $('#DetailsPopup').modal('hide');

            var address = data.Address1  + (data.Address2 ? ", " + data.Address2 : "") + (data.Address3 ? ", " + data.Address3 : "");
            var row = $("#branches [data-uid=" + currentItem + "]");

            var td = $(row).find("#grid_active_cell");
            $(td).text(address);
            model = $("#branches").data("kendoGrid").dataItem(row);
            model.set("Address", address);
            model.set("AddressId",  data.Id);

            // only save grid for new records
            //if (data.Id == 0) {
            //    $("#branches").data("kendoGrid").saveChanges();
            //}
            toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
        });
    });

    </script>

@Html.Partial("_BatchGrid", new ViewDataDictionary { { "Admin", admin }, { "GridName", "branches"}, { "ObjectName", "CompanyBranches" }, { "Functions", ViewBag.Functions } })

<div class="modal fade" id="DetailsPopup" data-url='@Url.Action("GetAddress", "Company")' tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="true" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">@MsgUtils.Instance.Trls("Address")</h4>
            </div>
            <div id="bodyContainer" class="modal-body" tabindex="0">
                
            </div>
            @*<div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary submit" id="saveAddress">Save Changes</button>
            </div>*@
       </div>
    </div>
</div>