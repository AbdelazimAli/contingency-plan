
@using WebApp.Extensions
@using System.Web.Script.Serialization

@{
    Layout = null;
    var rtl = User.Identity.RTL();
    var admin = User.IsInRole("Admin");
    int dataLevel = 4, read = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);
}

<div id="PrevOrders"></div>
<script>
    var TransType = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.TransType));
    var grid = "'PrevOrders'";
    var calcsMethod = [{ value: 1, text: '@MsgUtils.Instance.Trls("Monetary")' }, { value: 2, text: '@MsgUtils.Instance.Trls("Time Compensation")' }];
    var Duration = [{ value: 1, text: '@MsgUtils.Instance.Trls("Day")' }, { value: 2, text: '@MsgUtils.Instance.Trls("0.25 day")' }, { value: 3, text: '@MsgUtils.Instance.Trls("0.5 day")' }];
    var NofDays = [{ value: 1, text: '@MsgUtils.Instance.Trls("Day")' }, { value: 0.25, text: '@MsgUtils.Instance.Trls("0.25 day")' }, { value: 0.5, text: '@MsgUtils.Instance.Trls("0.5 day")' }];


    Grids.indexGrid({
        read: "@Url.Action("ReadPrevEmpAssignOrders", "AssignOrder")?empId=@ViewBag.EmpId",
        objectName: "PrevAssignOrders",
        gridName: "PrevOrders",
        admin: "@admin",
        aggregate: [{ field: "NofDays", aggregate: "sum" },{field: "TimeNofDays", aggregate: "sum" }],
        columns: [{field:"TransType",values:TransType},
            { field: "CalcMethod", values: calcsMethod,groupFooterTemplate: function (e) {
                return "@MsgUtils.Instance.Trls("Total")"+" = " +  kendo.toString(e.NofDays.sum + e.TimeNofDays.sum);} },
            //{ field: "Duration", values: Duration},
            {field: "NofDays",values:NofDays,groupFooterTemplate: function (e) {
                return "@MsgUtils.Instance.Trls("TotalMonetory")"+" = " +  kendo.toString(e.NofDays.sum);}
            },
            {field: "TimeNofDays",values:NofDays,groupFooterTemplate: function (e) {
                return "@MsgUtils.Instance.Trls("TotalTime")"+" = " +  kendo.toString(e.TimeNofDays.sum);}
            },
        ],
        lang: "@User.Identity.GetCulture()",
       group: { field: 'Year',aggregates: [{field: "NofDays", aggregate: "sum" },{field: "TimeNofDays", aggregate: "sum" }],dir:"desc"},
        sort: [{field:"Month",dir:"desc"}, {"field":"AssignDate","dir":"desc"}],
        groupable: false,
        sortable: false,
        pageable: {
            pageSize: 9999
        },
        select: {"TransType": TransType},
        toolbar: '<div style="float: left"><div class="btn-group"><button type="button" class="btn btn-sm btn-default glyphicon glyphicon-cog dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span></button><ul class="dropdown-menu" id="toolsMenu">@if(admin == true){<li><a class="glyphicon glyphicon-floppy-save" onclick="Grids.saveGrid(' + grid + ')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveGrid")</span></a></li>}' +
              '<li><a class="glyphicon glyphicon-trash" onclick="Grids.resetGrid(' + grid + ')"><span>&nbsp; @MsgUtils.Instance.Trls("ResetGrid")</span></a></li> </ul></div></div>&nbsp;&nbsp;</div>'
    });
    //AssignOrders //AssignOrderTable
</script>