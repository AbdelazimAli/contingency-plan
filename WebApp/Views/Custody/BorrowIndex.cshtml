
@using WebApp.Extensions
@using System.Web.Script.Serialization

@{
    ViewBag.Title = "Index";
    Layout = null;
    var rtl = User.Identity.RTL();
    int dataLevel = 0, read = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);
    string[] function = ViewData["Functions"] as string[];
}
<br />

@Html.Partial("_RequestFilters", new ViewDataDictionary { { "GridName", "BorrowDiv" }, { "HasDepts", "false" }, { "TableName", "EmpDocBorrows" } })
@Html.Partial("_ThumpImageGrid")
<br />
<div id="divChange"> <div id="BorrowDiv"></div> </div>
@{
    var admin = User.Identity.CanCustomize();
}

<script>

    var addUrl = "@Url.Action("DetailsDocBorrow", "Custody")";
    RequestFilters.applyAllFilters([], {}, "BorrowDiv", "@Url.Action("ReadDocBorrow", "Custody")?MenuId=@Request.QueryString["MenuId"]", addUrl);
    var columns = [{ field: "Employee", locked: true },
        {
            field: "Attachment",
            template: "<img class='myThumpImg'src='#:ThumpImage.CheckPic(data) #' width='80' height='80'>"

        }];
            var grid = "'BorrowDiv'";
            Grids.indexGrid({
                read: "@Url.Action("ReadDocBorrow", "Custody")?MenuId=@Request.QueryString["MenuId"]",
                edit: "@Url.Action("DetailsDocBorrow", "Custody")",
                objectName: "EmpDocumentBorrow",  // name of the page or table name used to create local db key
                gridName: "BorrowDiv",
                admin: "@admin",
                lang: "@User.Identity.GetCulture()",
                columns: columns,
                toolbar: '<div style="float: left"><div class="btn-group"><button type="button" class="btn btn-sm btn-default glyphicon glyphicon-cog dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="caret"></span></button><ul class="dropdown-menu" id="toolsMenu">@if(admin == true){<li><a class="glyphicon glyphicon-floppy-save" onclick="Grids.saveGrid(' + grid + ')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveGrid")</span></a></li>}' +
                  '@if (function != null && function.Length > 0){if (Array.Exists(function, f => f == "ExportExcel")){<li><a class="fa fa-file-powerpoint-o" onclick="Grids.saveAsXsl(' + grid + ')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveAsExcel")</span></a></li>}if (Array.Exists(function, f => f == "ExportPdf")){<li><a class="fa fa-file-powerpoint-o" onclick="Grids.saveAsPdf(' + grid + ')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveAsPDF")</span></a></li>}}' +
                  '<li><a class="glyphicon glyphicon-trash" onclick="Grids.resetGrid(' + grid + ')"><span>&nbsp; @MsgUtils.Instance.Trls("ResetGrid")</span></a></li> </ul></div></div>&nbsp;&nbsp;</div>',
                dataBound: function (e) {
                    var gridName = this.gridName;
                    var name = $("#" + this.gridName);
                    var gridd = name.data("kendoGrid");
                    name.find(".k-grid-Delever").each(function (e) {
                        var model = name.getKendoGrid().dataItem($(this).closest("tr"));
                        $(this).addClass("Delever");
                        $(this).attr("modelid", model.Id);
                        $(this).click(ClickDelever);
                        $(this).prop("innerHTML", "@MsgUtils.Instance.Trls("Delever")");
                    });

                    ThumpImage.BindLoadImage(gridName, 'BorrowPapers');
                }
            });
        function ClickDelever(e) {
            e.stopPropagation();
            e.preventDefault();
            var modelId = $(this).attr("modelid");
            $('#renderbody').load("@Url.Action("DeleverDocBorrow", "Custody")?Id=" + modelId +"&MenuId=@Request.QueryString["MenuId"]&Read=0&Version=@Request.QueryString["Version"]&DataLevel=@dataLevel&RoleId=@Request.QueryString["RoleId"]");
        }
</script>







