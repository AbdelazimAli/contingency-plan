
@using System.Web.Script.Serialization
@using WebApp.Extensions
@{
    Layout = null;
    var admin = User.Identity.CanCustomize();
    var compantId = User.Identity.GetDefaultCompany();
    var culture = User.Identity.GetCulture();
    var rtl = User.Identity.RTL();
    var version = Request.QueryString["Version"];
    int dataLevel = 0, read = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);

}
<style>
    .k-slider-horizontal {
        width: 80% !important;
    }
</style>
<br />
<br />
<div id="Custody"></div>
@*<script src="~/Scripts/typeahead.bundle.min.js"></script>*@
<script>
    var model;
    var EmpCustody=@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.EmpCustody));
    var JobEmp;
    var Jobs=@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.jobs));
    var branches=@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Branches));
    var CustCategory =@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.CustodyCategory));
    var Currency = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Currency));

    $(function () {
        // Back to index
        //var oldPage = localStorage.getItem("menuhigh").split(",");
        //oldulr = $("#"+ oldPage[2] + " a").attr("href");
        //tabs
        var formId = "PeopleForms";
        model = @Html.Raw((new JavaScriptSerializer()).Serialize(Model))
            var url = "@Url.Action("ReadFormInfo", "Pages")";
            //If you press on Button Show it will be read only
            var read = "@Request.QueryString["Read"]";
            //Send the serialized model and props to form.js
            $.ajax({
                async: false,
                url: "@Url.Action("ReadFormInfo","Pages")",
                type: "GET",
                dataType: "json",
                contentType: 'application/json',
                data: { objectname: "Custody", version:"@version", roleId: "@Request.QueryString["RoleId"]"},
                success: function (data) {
                    data.FormAction = "@Url.Action("SaveCustody", "Custody")";
                    data.FormId = formId;
                    data.Culture = '@culture';
                    data.TableName = "Custody";
                    data.companyId = "@compantId";
                    data.admin = '@admin';
                    //Unique for Company
                    data.parentColumn = "CompanyId";
                    data.parentId = "@compantId";
                    data.isLocal = true;

                    //data.HasPanel=false;
                    if(read == 1)
                        data.mode = 'show';
                    data.rtl = @rtl.ToString().ToLower();
                    data.btns = ["back"];
                    //Append the form to the div
                    $("#Custody").Forms(data, model);
                    FormJs.fillOptionsDynamic($("#" + formId), "JobId", Jobs, model);
                    FormJs.fillOptionsDynamic($("#" + formId), "BranchId", branches, model);
                    FormJs.fillOptionsDynamic($("#" + formId), "CustodyCatId",CustCategory, model);
                    FormJs.fillOptionsDynamic($("#" + formId), "Curr", Currency, model);
                    $("#Qty").closest(".form-group").remove();
                    //-- Slider Status Custody
                    $("#Status").kendoSlider({
                        min: 1,
                        max: 100,
                        tickPlacement:'none',
                        value:model.Status == null ?100 :model.Status,
                        change:function(e){
                            $("#statusId").text(e.value+"%");
                        }
                    });

                    $("#" + formId).find('#Status').closest(".k-widget.k-slider").after("<span id='statusId' class='badge badge-red'>"+model.Status+"%</span>");

                    //Translate The Button saveChanges from ColumnsTilte based on Culture
                    $("#" + formId).find('#saveChanges').val('@MsgUtils.Instance.Trls("SaveChanges")');
                    $("#" + formId).find('#backToIndex').val('@MsgUtils.Instance.Trls("backToIndex")');
                    $("#" + formId).find('#saveAndClose').val('@MsgUtils.Instance.Trls("saveAndClose")');
                }
            });
            $("#"+formId).on("click","#saveChanges",function (e) {
                if($("#" + formId).find(".k-invalid").length > 0) return ;
                FormJs.saveForm($("#" + formId), $(this), function (res) {
                    model = res;
                    toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                    $("#Documents").attr("disabled", false);
                });
            });

            $("#" + formId).on("click","#saveAndClose",function (e) {
                if($("#" + formId).find(".k-invalid").length > 0) return ;
                FormJs.saveForm($("#" + formId), $(this), function (res) {
                    toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                    updateHistory(oldUlr);
                    //  model = res;
                });
            });

        $("#" + formId).on('blur', "#EndDate",function(){
            var elem = $(this);
            if($('#StartDate').val() != ""){
                $('#StartDate').removeClass("k-invalid").prop("aria-invalid", false);
                $('#StartDate').next("span.k-tooltip-validation").remove();
            }
            elem.removeClass("k-invalid").prop("aria-invalid", false);
            elem.next("span.k-tooltip-validation").remove();

            if(elem.val()!=""){
                var valueinDays=($("#StartDate").data("kendoDatePicker").value()-elem.data("kendoDatePicker").value())/(1000*3600*24);
                if(valueinDays > 0){
                    if (elem && !elem.hasClass("k-invalid")) {
                        elem.addClass("k-invalid").prop("aria-invalid", true);
                        elem.after("<span class='k-widget k-tooltip k-tooltip-validation k-invalid-msg' data-for='EndDate' role='alert'>@MsgUtils.Instance.Trls("EndDateGthanStartDate")</span>");
                    }
                }
            }
        });
       
    });

</script>






