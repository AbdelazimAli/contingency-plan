
@using System.Web.Script.Serialization
@using WebApp.Extensions
@{
    Layout = null;
    var admin = User.Identity.CanCustomize();
    var compantId = User.Identity.GetDefaultCompany();
    var culture = User.Identity.GetCulture();
    var rtl = User.Identity.RTL();
    var version = Request.QueryString["Version"];
    int dataLevel = 0, read = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);

}
<style>
    .k-slider-horizontal {
        width: 80% !important;
    }
</style>

<div id="RecieveCustody"></div>
@*<script src="~/Scripts/typeahead.bundle.min.js"></script>*@
<script>
    var model;
    var EmpCustody=@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.EmpCustody));
    var branches=@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Branches));
    var Employees=@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Employees));
    var RestQty = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.RestQty));
    var CustCategory =@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.CustodyCategory));
    @*var funs = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Functions));*@
    var funs = $.grep(JSON.parse(localStorage["Functions"]), function (e) { return e.MenuId == "@Request.QueryString["MenuId"]" }).map(function(obj){ return obj.Name });

    $(function () {
        //var oldPage = localStorage.getItem("menuhigh").split(",");
        //oldulr = $("#"+ oldPage[2] + " a").attr("href");
        //tabs
        var formId = "ConsumedCustody";
        model = @Html.Raw((new JavaScriptSerializer()).Serialize(Model))
            var url = "@Url.Action("ReadFormInfo", "Pages")";
            //If you press on Button Show it will be read only
            var read = "@Request.QueryString["Read"]";
            //Send the serialized model and props to form.js
            $.ajax({
                async: false,
                url: "@Url.Action("ReadFormInfo","Pages")",
                type: "GET",
                dataType: "json",
                contentType: 'application/json',
                data: { objectname: "RecieveCustody", version:"@version", roleId: "@Request.QueryString["RoleId"]"},
                success: function (data) {
                    data.FormAction = "@Url.Action("SaveRecievedConsumeCustody", "Custody")";
                    data.FormId = formId;
                    data.Culture = '@culture';
                    data.TableName = "EmpCustodies";
                    data.companyId = "@compantId";
                    data.admin = '@admin';
                    //Unique for Company
                    data.parentColumn = "CompanyId";
                    data.parentId = "@compantId";
                    data.isLocal = true;

                    //data.HasPanel=false;
                    if(read == 1)
                        data.mode = 'show';
                    data.rtl = @rtl.ToString().ToLower();
                    data.btns = ["back"];
                    data.reqbtns = [];

                    if(funs && funs.length >0)
                    {
                        if($.inArray('Download',funs) >= 0)
                            data.reqbtns.push('Download');
                        if($.inArray('Upload',funs) >= 0)
                            data.reqbtns.push('Upload');
                    }
                    //Append the form to the div
                    $("#RecieveCustody").Forms(data, model);
                    FormJs.fillOptionsDynamic($("#" + formId), "BranchId", branches, model);
                    FormJs.fillOptionsDynamic($("#" + formId), "CustodyCatId", CustCategory, model);
                    FormJs.fillOptionsDynamic($("#" + formId), "EmpId", Employees, model,{ remoteTableName: "People"});
                    $("#RecvStatus").closest(".form-group").remove();
                    //$("#" + formId).find('[name="PurchaseSec"]').remove();
                    $("#RecvDate").data("kendoDatePicker").value("");
                    //$("#Description").attr("readOnly",true);
                    //check Rest Qty
                    $("#" + formId).on('blur', "#Qty",function(){
                        var elem = $(this);
                        if($("#Qty").val() > RestQty)
                            FormJs.addFormError("ConsumedCustody","Qty","@MsgUtils.Instance.Trls("Qty greater Rest")");
                        else if($("#Qty").val()<= 0)
                            FormJs.addFormError("ConsumedCustody","Qty","@MsgUtils.Instance.Trls("Qty Less Zero")");

                    });
                    $("#" + formId).find('[name="SerialSec"]').remove();

                    // change Emp Id
                    $("#"+formId).on('change','#EmpId',function(){
                        var EmpId  = getEmpId();
                        $.ajax({
                            async: false,
                            url: "@Url.Action("GetCurrentBranch", "Custody")",
                            data: {EmpId:EmpId },
                            dataType: "json",
                            success: function (res)
                            {
                                if(res != null)
                                    $("#" + formId).find('#BranchId').getKendoDropDownList().value(res);
                            }
                        });
                    });

                    //get Employee Id
                    function getEmpId() {
                        var field = $("#"+ formId + " #EmpId"); //if text: autocomplete, else: select- kendoDropDownList || hidden input
                        return (field.prop("type") == "text" ? field.prop("data-val") : field.val());
                    }

                    //Translate The Button saveChanges from ColumnsTilte based on Culture
                    $("#" + formId).find('#saveChanges').val('@MsgUtils.Instance.Trls("SaveChanges")');
                    $("#" + formId).find('#backToIndex').val('@MsgUtils.Instance.Trls("backToIndex")');
                    $("#" + formId).find('#saveAndClose').val('@MsgUtils.Instance.Trls("saveAndClose")');
                }
            });
            $("#"+formId).on("click","#saveChanges",function (e) {
                if($("#" + formId).find(".k-invalid").length > 0) return ;
                FormJs.saveForm($("#" + formId), $(this), function (res) {
                    model = res;
                    toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                    $("#Documents").attr("disabled", false);
                });

            });

            $("#" + formId).on("click","#saveAndClose",function (e) {
                if($("#" + formId).find(".k-invalid").length > 0) return ;
                FormJs.saveForm($("#" + formId), $(this), function (res) {
                    toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                    updateHistory(oldUlr);
                    //  model = res;
                });
            });



    });

</script>
@Html.Partial("_UploadFile", new ViewDataDictionary { { "FormId", "ConsumedCustody" } })






