@*@model string*@
<style>
    .image-preview {
        position: relative;
        vertical-align: top;
        height: 45px;
    }

    * {
        margin: 0;
        padding: 0;
    }

    .container {
        overflow: hidden;
        width: 960px;
        margin: 20px auto;
    }

    .contr {
        background-color: #212121;
        padding: 10px 0;
        text-align: center;
        border-radius: 10px 10px 0 0;
        -moz-border-radius: 10px 10px 0 0;
        -webkit-border-radius: 10px 10px 0 0;
    }

    .upload_form_cont {
        float: right;
        direction: ltr background: -moz-linear-gradient(#ffffff, #f2f2f2);
        background: -ms-linear-gradient(#ffffff, #f2f2f2);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #ffffff), color-stop(100%, #f2f2f2));
        background: -webkit-linear-gradient(#ffffff, #f2f2f2);
        background: -o-linear-gradient(#ffffff, #f2f2f2);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f2f2f2');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f2f2f2')";
        background: linear-gradient(#ffffff, #f2f2f2);
        color: #000;
        overflow: hidden;
    }

    #upload_form {
        float: left;
        padding: 20px;
        width: 700px;
    }

    #preview, #pdf {
        background-color: #fff;
        display: block;
        float: left;
        width: 200px;
        /*height:150px;*/
    }

    #upload_form > div {
        margin-bottom: 10px;
    }

    #speed, #remaining {
        float: left;
        width: 100px;
    }

    #b_transfered {
        float: right;
        text-align: right;
    }

    .clear_both {
        clear: both;
    }

    input {
        border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
        -webkit-border-radius: 10px;
        border: 1px solid #ccc;
        font-size: 14pt;
        padding: 5px 10px;
    }

    #xhrUpload {
        margin: -9px 3px;
        background: -moz-linear-gradient(#ffffff, #dfdfdf);
        background: -ms-linear-gradient(#ffffff, #dfdfdf);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #ffffff), color-stop(100%, #dfdfdf));
        background: -webkit-linear-gradient(#ffffff, #dfdfdf);
        background: -o-linear-gradient(#ffffff, #dfdfdf);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#dfdfdf');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#dfdfdf')";
        background: linear-gradient(#ffffff, #dfdfdf);
    }

    #image_file {
        width: 400px;
    }

    #progress_info {
        font-size: 10pt;
    }

    #fileinfo, #error, #error2, #abort, #warnsize {
        color: #aaa;
        display: none;
        font-size: 10pt;
        font-style: italic;
        margin-top: 10px;
    }

    #progress {
        width: 620px;
        border: 1px solid #ccc;
        display: none;
        float: left;
        height: 14px;
        border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
        -webkit-border-radius: 10px;
        background: -moz-linear-gradient(#66cc00, #4b9500);
        background: -ms-linear-gradient(#66cc00, #4b9500);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #66cc00), color-stop(100%, #4b9500));
        background: -webkit-linear-gradient(#66cc00, #4b9500);
        background: -o-linear-gradient(#66cc00, #4b9500);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#66cc00', endColorstr='#4b9500');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#66cc00', endColorstr='#4b9500')";
        background: linear-gradient(#66cc00, #4b9500);
    }

    #progress_percent {
        float: right;
    }

    #upload_response {
        float: left;
        margin-top: 10px;
        padding: 20px;
        overflow: hidden;
        display: none;
        border: 1px solid #ccc;
        border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
        -webkit-border-radius: 10px;
        box-shadow: 0 0 5px #ccc;
        background: -moz-linear-gradient(#bbb, #eee);
        background: -ms-linear-gradient(#bbb, #eee);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #bbb), color-stop(100%, #eee));
        background: -webkit-linear-gradient(#bbb, #eee);
        background: -o-linear-gradient(#bbb, #eee);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#bbb', endColorstr='#eee');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#bbb', endColorstr='#eee')";
        background: linear-gradient(#bbb, #eee);
    }
</style>

<div class="form-group" style="@(User.Identity.RTL() ? "float: right" : "float: left")">
    <input type="radio" name="Type" checked value="1" />@MsgUtils.Instance.Trls("ChooseFile")
    <input type="radio" name="Type" value="2" />@MsgUtils.Instance.Trls("ScanFile")
    <div id="FileS" class="hidden">
        <label for="image_file">@MsgUtils.Instance.Trls("SelectFileType")</label>
        <input type="radio" name="FileType" checked value="PDF" />@MsgUtils.Instance.Trls("PDF")
        <input type="radio" name="FileType" value="JPG" />@MsgUtils.Instance.Trls("JPG")
        <input type="radio" name="FileType" value="TIFF" />@MsgUtils.Instance.Trls("TIFF")
    </div>
    <button id="startScan" name="startScan" class="btn btn-primary hidden">@MsgUtils.Instance.Trls("StartScan")</button>
</div>
<div class="upload_form_cont">

    <form id="upload_form" enctype="multipart/form-data" method="post">
        <div id="chooseF">
            <div>
                <label for="image_file">@MsgUtils.Instance.Trls("selectfile")</label>
            </div>
            <div>
                <input type="file" accept="image/*" name="image_file" id="image_file" />
            </div>
            <div id="nofile">@MsgUtils.Instance.Trls("Noselectfile")</div>

        </div>
        <div>
            <input id="xhrUpload" class="hide" type="button" value="Upload" />
        </div>
        <div class="form-group" style="@(User.Identity.RTL() ? "float: left" : "float:right")">
            <img id="preview" src="@(ViewBag.Document==""?"":"data:image/jpg;base64,"+ViewBag.Document)"/>
            <embed id="pdf" src="" class="hidden" />
        </div>
        <div id="fileinfo" style="@(!User.Identity.RTL() ? "float: left" : "float: right")">
            <div id="filename"></div>
            <div id="filesize"></div>
            <div id="filetype"></div>
        </div>
        <div id="error">@MsgUtils.Instance.Trls("imageFileonly")</div>
        <div id="error2">@MsgUtils.Instance.Trls("erroruploading")</div>
        <div id="abort">@MsgUtils.Instance.Trls("cancelUploading")</div>
        <div id="warnsize">@MsgUtils.Instance.Trls("fileisbig")</div>

        <div id="progress_info">
            <div id="progress"></div>
            <div id="progress_percent">&nbsp;</div>
            <div class="clear_both"></div>
            <div>
                <div id="speed">&nbsp;</div>
                <div id="remaining">&nbsp;</div>
                <div id="b_transfered">&nbsp;</div>
                <div class="clear_both"></div>
            </div>
            <div id="upload_response"></div>
        </div>

    </form>
    <div class="form-group">
        <button id="Ok" name="Ok" style="@(User.Identity.RTL() ? "float: right" : "float: left")" class="btn btn-primary" onclick="ChooseFile()">@MsgUtils.Instance.Trls("Upload")</button>
        <button id="Close" name="Close" style="@(User.Identity.RTL() ? "float: right" : "float: left")" class="btn btn-primary hidden" onclick="Close()">@MsgUtils.Instance.Trls("Close")</button>
    </div>
</div>


<script>
    function ChooseFile(){
        var value = $("input[name='Type']:checked").val();
        var File = $("#image_file").val();
        if(File != ""){
            if(value=="1")
                startUploading();
            else
                console.log("Scan");
        }else
            toastr.error("@MsgUtils.Instance.Trls("Noselectfile")");
    }
    function Close(){
        $("#UploadPopup").modal("hide");
        var oImage = document.getElementById('preview');
        EmptyData(oImage);
    }
    $("input[name='Type']").change(function(){
        if($(this).val() == "1"){
            startScan.setAttribute("class","btn btn-primary hidden");
            FileS.setAttribute("class","btn btn-primary hidden");
            chooseF.removeAttribute("class");
        }else{
            startScan.removeAttribute("class");
            chooseF.setAttribute("class","hidden");
            FileS.removeAttribute("class");
            HideErrorElements();
            EmptyData();
        }
    });
    $("#xhrUpload").hide();
    @*var sourceId = "@ViewBag.SourceId";
    var source = "@ViewBag.Source";*@
    /////////////////////////////////////////////////////////////////////
    var chooseF = document.getElementById('chooseF');
    var oImage = document.getElementById('preview');
    var pdf = document.getElementById('pdf');
    var StartScan = document.getElementById('startScan');
    var FileS = document.getElementById('FileS');
    function EmptyData(){
        oImage.src = "";
        pdf.src ="";
        pdf.style.display ='none';
        oImage.style.display ='none';
        $('#Close').addClass('hidden');
        $('#Ok').removeClass('hidden');
        document.getElementById('nofile').style.display = 'block';
        document.getElementById('image_file').value = '';
        document.getElementById('fileinfo').style.display = 'none';
        document.getElementById('progress_info').style.display = 'none';
    }

    function HideErrorElements() {
        // hide different warnings
        document.getElementById('upload_response').style.display = 'none';
        document.getElementById('error').style.display = 'none';
        document.getElementById('error2').style.display = 'none';
        document.getElementById('abort').style.display = 'none';
        document.getElementById('warnsize').style.display = 'none';
        document.getElementById('nofile').style.display = 'none';
        document.getElementById('fileinfo').style.display = 'none';
        $('#Ok').removeClass('hidden');
        $('#Close').addClass('hidden');
    }

    //Load data File
    function dataFile(oFile,file){      // binding onload event

        // we are going to display some custom image information here
        sResultFileSize = bytesToSize(oFile.size);
        document.getElementById('fileinfo').style.display = 'block';
        document.getElementById('filename').innerHTML = "@MsgUtils.Instance.Trls("Name")" +": "+ oFile.name;
        document.getElementById('filesize').innerHTML = "@MsgUtils.Instance.Trls("Size")"+ ": "+ sResultFileSize;
        document.getElementById('filetype').innerHTML = "@MsgUtils.Instance.Trls("Type")"+": " + oFile.type;
    }

    $("#image_file").on("change", function () {
        //console.log("onchange file>>>>")

        HideErrorElements();
        // get selected file element
        var oFile = document.getElementById('image_file').files[0];
        // get preview element


        var imgValue = $("#image_file").val();
        if (imgValue != "") {

            // little test for filesize
            if (oFile.size > iMaxFilesize) {
                document.getElementById('warnsize').style.display = 'block';
                document.getElementById('warnsize').style.height = '150px';
                return;
            }


            // filter for image files
            var rFilter = /^(image\/tif|image\/jpeg|image\/png|image\/tiff)$/i;
            if (!rFilter.test(oFile.type)) {
                document.getElementById('error').style.display = 'block';
                EmptyData();
                return;
            }


            // prepare HTML5 FileReader
            var oReader = new FileReader();
            oReader.onload = function (e) {

                // e.target.result contains the DataURL which we will use as a source of the image

                if(oFile.type =="application/pdf")   {
                    pdf.src = e.target.result;
                    pdf.style.display = "";
                    oImage.src = "";
                    pdf.removeAttribute("class");
                    pdf.height="350px";
                    oImage.setAttribute("class","hidden");
                    pdf.onload = dataFile(oFile,pdf);
                }else{
                    oImage.style.display = "";
                    oImage.src = e.target.result;
                    pdf.src ="";
                    oImage.removeAttribute("class");
                    pdf.setAttribute("class","hidden");
                    oImage.onload = dataFile(oFile,oImage);
                }
                document.getElementById('progress_info').style.display = 'block';
            };

            // read selected file as DataURL
            oReader.readAsDataURL(oFile);
        }
        else {
            EmptyData(oImage);
            return;
        }
    });
    $("#xhrUpload").on("click", function () {
        // console.log("upload Click>>>>");
        // cleanup all temp states
        iPreviousBytesLoaded = 0;
        document.getElementById('upload_response').style.display = 'none';
        document.getElementById('error').style.display = 'none';
        document.getElementById('error2').style.display = 'none';
        document.getElementById('abort').style.display = 'none';
        document.getElementById('warnsize').style.display = 'none';
        document.getElementById('progress_percent').innerHTML = '';

        oProgress.style.display = 'block';
        oProgress.style.width = '0px';

        // get form data for POSTing
        //var vFD = document.getElementById('upload_form').getFormData(); // for FF3
        var vFD = new FormData(document.getElementById('upload_form'));

        // create XMLHttpRequest object, adding few event listeners, and POSTing our data
        var oXHR = new XMLHttpRequest();
        oXHR.upload.addEventListener('progress', uploadProgress, false);
        oXHR.addEventListener('load', uploadFinish, false);
        oXHR.addEventListener('error', uploadError, false);
        oXHR.addEventListener('abort', uploadAbort, false);
        //var Idelemd =  $("#"+FormId).find("#Id").is('input');
        //var sourceId = Idelemd ? $("#"+FormId).find("#Id").val():$("#"+FormId).find("#Id").text();
        oXHR.open('POST', '/FileUpload/UploadOneFile?Source='+source+'&SourceId=' +sourceId);
        oXHR.send(vFD);

        // set inner timer
        oTimer = setInterval(doInnerUpdates, 300);
    });

    // common variables
    var iBytesUploaded = 0;
    var iBytesTotal = 0;
    var iPreviousBytesLoaded = 0;
    var iMaxFilesize = 6591456; // 1MB
    var oTimer = 0;
    var sResultFileSize = '';

    function startUploading() {
        //    console.log("upload Click>>>>");
        // cleanup all temp states

        iPreviousBytesLoaded = 0;
        document.getElementById('upload_response').style.display = 'none';
        document.getElementById('error').style.display = 'none';
        document.getElementById('error2').style.display = 'none';
        document.getElementById('abort').style.display = 'none';
        document.getElementById('warnsize').style.display = 'none';
        document.getElementById('progress_percent').innerHTML = '';
        var oProgress = document.getElementById('progress');
        oProgress.style.display = 'block';
        oProgress.style.width = '0px';

        // get form data for POSTing
        //var vFD = document.getElementById('upload_form').getFormData(); // for FF3
        var vFD = new FormData(document.getElementById('upload_form'));

        // create XMLHttpRequest object, adding few event listeners, and POSTing our data
        var oXHR = new XMLHttpRequest();
        oXHR.upload.addEventListener('progress', uploadProgress, false);
        oXHR.addEventListener('load', uploadFinish,false);
        oXHR.addEventListener('error', uploadError, false);
        oXHR.addEventListener('abort', uploadAbort, false);
        //var Idelemd =  $("#"+FormId).find("#Id").is('input');
        //var sourceId = Idelemd ? $("#"+FormId).find("#Id").val():$("#"+FormId).find("#Id").text();
        oXHR.open('POST', '/FileUpload/UploadOneFile?Source='+source+'&SourceId=' +sourceId);

        oXHR.send(vFD);
        // set inner timer
        oTimer = setInterval(doInnerUpdates, 300);
    }

    function secondsToTime(secs) { // we will use this function to convert seconds in normal time format
        var hr = Math.floor(secs / 3600);
        var min = Math.floor((secs - (hr * 3600)) / 60);
        var sec = Math.floor(secs - (hr * 3600) - (min * 60));

        if (hr < 10) { hr = "0" + hr; }
        if (min < 10) { min = "0" + min; }
        if (sec < 10) { sec = "0" + sec; }
        if (hr) { hr = "00"; }
        return hr + ':' + min + ':' + sec;
    };

    function bytesToSize(bytes) {
        var sizes = ['Bytes', 'KB', 'MB'];
        if (bytes == 0) return 'n/a';
        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
        return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];
    };

    function doInnerUpdates() { // we will use this function to display upload speed
        var iCB = iBytesUploaded;
        var iDiff = iCB - iPreviousBytesLoaded;

        // if nothing new loaded - exit
        if (iDiff == 0)
            return;

        iPreviousBytesLoaded = iCB;
        iDiff = iDiff * 2;
        var iBytesRem = iBytesTotal - iPreviousBytesLoaded;
        var secondsRemaining = iBytesRem / iDiff;

        // update speed info
        var iSpeed = iDiff.toString() + 'B/s';
        if (iDiff > 1024 * 1024) {
            iSpeed = (Math.round(iDiff * 100 / (1024 * 1024)) / 100).toString() + 'MB/s';
        } else if (iDiff > 1024) {
            iSpeed = (Math.round(iDiff * 100 / 1024) / 100).toString() + 'KB/s';
        }

        document.getElementById('speed').innerHTML = iSpeed;
        document.getElementById('remaining').innerHTML = '| ' + secondsToTime(secondsRemaining);
    }

    function uploadProgress(e) { // upload process in progress
        if (e.lengthComputable) {
            iBytesUploaded = e.loaded;
            iBytesTotal = e.total;
            var iPercentComplete = Math.round(e.loaded * 100 / e.total);
            var iBytesTransfered = bytesToSize(iBytesUploaded);

            document.getElementById('progress_percent').innerHTML = iPercentComplete.toString() + '%';
            document.getElementById('progress').style.width = (iPercentComplete * 4).toString() + 'px';
            document.getElementById('b_transfered').innerHTML = iBytesTransfered;
            if (iPercentComplete == 100) {
                var oUploadResponse = document.getElementById('upload_response');
                oUploadResponse.innerHTML = '<h1>"@MsgUtils.Instance.Trls("processing")"</h1>';
                oUploadResponse.style.display = 'block';
                document.getElementById('progress_info').style.display = 'block';
                $("#Close").removeClass("hidden");
                $("#Ok").addClass("hidden");
                $('#b8').attr('disabled', false);
            }
        } else {
            document.getElementById('progress').innerHTML = 'unable to compute';
        }
    }

    function uploadFinish(e) { // upload successfully finished
        var oUploadResponse = document.getElementById('upload_response');

        @*//    console.log(JSON.parse(e.target.responseText))
        var resMsg = JSON.parse(e.target.responseText).files[0];
        oUploadResponse.innerHTML = "<p>'@MsgUtils.Instance.Trls("yourFile")'"+ resMsg.name +"'@MsgUtils.Instance.Trls("sucessrec")'</p><p>'@MsgUtils.Instance.Trls("Type")': " + resMsg.type + "</p><p>'@MsgUtils.Instance.Trls("Size")': " + Math.floor(((resMsg.size) / 1024)) + " KB</p>";*@

        if (e.target.responseText !== '"OK"')
            oUploadResponse.innerHTML = "<p>" + e.target.responseText + "</p>";
        else
            oUploadResponse.innerHTML = "<p>@MsgUtils.Instance.Trls("FileSuccessfullyUploaded")</p>";

        oUploadResponse.style.display = 'block';
        document.getElementById('progress_percent').innerHTML = '100%';
        document.getElementById('progress').style.width = '620px';
        document.getElementById('filesize').innerHTML = sResultFileSize;
        document.getElementById('remaining').innerHTML = '| 00:00:00';
        clearInterval(oTimer);
    }

    function uploadError(e) { // upload error
        document.getElementById('error2').style.display = 'block';
        clearInterval(oTimer);
        $("#xhrUpload").show();
    }

    function uploadAbort(e) { // upload abort
        document.getElementById('abort').style.display = 'block';
        clearInterval(oTimer);
    }
    /////////////////////////////////////////////////////////////////////


</script>
