@using System.Web.Script.Serialization
@using WebApp.Extensions
@model Model.ViewModel.Personnel.RenewRequestViewModel
@{
    Layout = null;
    var admin = User.IsInRole("Admin");
    var compantId = User.Identity.GetDefaultCompany();
    var culture = User.Identity.GetCulture();
    var rtl = User.Identity.RTL();
}
<style>
    .image-preview {
        position: relative;
        vertical-align: top;
        height: 45px;
    }

    * {
        margin: 0;
        padding: 0;
    }


    /*header {
        background-color: #212121;
        box-shadow: 0 -1px 2px #111111;
        display: block;
        height: 70px;
        position: relative;
        width: 100%;
        z-index: 100;
    }

        header h2 {
            font-size: 22px;
            font-weight: normal;
            left: 50%;
            margin-left: -400px;
            padding: 22px 0;
            position: absolute;
            width: 540px;
        }

        header a.stuts, a.stuts:visited {
            border: none;
            text-decoration: none;
            color: #fcfcfc;
            font-size: 14px;
            left: 50%;
            line-height: 31px;
            margin: 23px 0 0 110px;
            position: absolute;
            top: 0;
        }

        header .stuts span {
            font-size: 22px;
            font-weight: bold;
            margin-left: 5px;
        }*/

    .container {
        overflow: hidden;
        width: 960px;
        margin: 20px auto;
    }

    .contr {
        background-color: #212121;
        padding: 10px 0;
        text-align: center;
        border-radius: 10px 10px 0 0;
        -moz-border-radius: 10px 10px 0 0;
        -webkit-border-radius: 10px 10px 0 0;
    }

    .upload_form_cont {
        float: right;
        direction: ltr background: -moz-linear-gradient(#ffffff, #f2f2f2);
        background: -ms-linear-gradient(#ffffff, #f2f2f2);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #ffffff), color-stop(100%, #f2f2f2));
        background: -webkit-linear-gradient(#ffffff, #f2f2f2);
        background: -o-linear-gradient(#ffffff, #f2f2f2);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f2f2f2');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f2f2f2')";
        background: linear-gradient(#ffffff, #f2f2f2);
        color: #000;
        overflow: hidden;
    }

    #upload_form {
        float: left;
        padding: 20px;
        width: 700px;
    }

    #preview {
        background-color: #fff;
        display: block;
        float: left;
        width: 200px;
    }

    #upload_form > div {
        margin-bottom: 10px;
    }

    #speed, #remaining {
        float: left;
        width: 100px;
    }

    #b_transfered {
        float: right;
        text-align: right;
    }

    .clear_both {
        clear: both;
    }

    input {
        border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
        -webkit-border-radius: 10px;
        border: 1px solid #ccc;
        font-size: 14pt;
        padding: 5px 10px;
    }

    #xhrUpload {
        margin: -9px 3px;
        background: -moz-linear-gradient(#ffffff, #dfdfdf);
        background: -ms-linear-gradient(#ffffff, #dfdfdf);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #ffffff), color-stop(100%, #dfdfdf));
        background: -webkit-linear-gradient(#ffffff, #dfdfdf);
        background: -o-linear-gradient(#ffffff, #dfdfdf);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#dfdfdf');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#dfdfdf')";
        background: linear-gradient(#ffffff, #dfdfdf);
    }

    #image_file {
        width: 400px;
    }

    #progress_info {
        font-size: 10pt;
    }

    #fileinfo, #error, #error2, #abort, #warnsize {
        color: #aaa;
        display: none;
        font-size: 10pt;
        font-style: italic;
        margin-top: 10px;
    }

    #progress {
        width: 620px;
        border: 1px solid #ccc;
        display: none;
        float: left;
        height: 14px;
        border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
        -webkit-border-radius: 10px;
        background: -moz-linear-gradient(#66cc00, #4b9500);
        background: -ms-linear-gradient(#66cc00, #4b9500);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #66cc00), color-stop(100%, #4b9500));
        background: -webkit-linear-gradient(#66cc00, #4b9500);
        background: -o-linear-gradient(#66cc00, #4b9500);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#66cc00', endColorstr='#4b9500');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#66cc00', endColorstr='#4b9500')";
        background: linear-gradient(#66cc00, #4b9500);
    }

    #progress_percent {
        float: right;
    }

    #upload_response {
        float: left;
        margin-top: 10px;
        padding: 20px;
        overflow: hidden;
        display: none;
        border: 1px solid #ccc;
        border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
        -webkit-border-radius: 10px;
        box-shadow: 0 0 5px #ccc;
        background: -moz-linear-gradient(#bbb, #eee);
        background: -ms-linear-gradient(#bbb, #eee);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #bbb), color-stop(100%, #eee));
        background: -webkit-linear-gradient(#bbb, #eee);
        background: -o-linear-gradient(#bbb, #eee);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#bbb', endColorstr='#eee');
        -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#bbb', endColorstr='#eee')";
        background: linear-gradient(#bbb, #eee);
    }
</style>

<script src="Scripts/kendo.all.min.js"></script>
<div id="renewForm"></div>
<div id="docWindow"></div>
<div id="xhr" class="container">

</div>
@*<div>
        <div class="k-content k-rtl">
            <input name="file" id="file" type="file" />
        </div>
    </div>*@
<script>
    $(function () {

        var oldPage=localStorage.getItem("menuhigh").split(",");
        var oldUrl = $("#"+oldPage[2]+" a").attr("href")

        var model = @Html.Raw((new JavaScriptSerializer()).Serialize(Model));
        var colDropDown = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.colDropDown));
        var qualificationId =@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.QualificationId));

        var kafeelId= @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.KafeelId));
        var Status  =@Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Status));

        var url = "@Url.Action("ReadFormInfo", "Pages")";
        var selectColums = ['','',''];
        var read = "@Request.QueryString["Read"]";
        var isShow = read == 1 ;
        var formId="renewRequestForm"
        $.getJSON(url, { objectname: 'RenewRequest', version: "@Request.QueryString["Version"]", RoleId: "@Request.QueryString["RoleId"]" }, function (data) {
            data.FormAction = "@Url.Action("Details", "RenewRequest")";
            data.FormId = formId;
            data.Culture = '@culture';
            data.TableName = "RenewRequests";
            data.admin = '@admin';
            data.rtl = @rtl.ToString().ToLower();
            data.companyId = "@compantId";
            data.btns = ["back"];

            if(isShow) {
                data.mode = 'show';

            }
            $("#renewForm").Forms(data, model);
            var oldValueParent = $("#" + formId + " #OldValue").parent();
            var newValueParent = $("#" + formId + " #NewValue").parent();
            if (model.Id==0) {
                $("#" + formId).find("#OldValue, #NewValue").closest(".form-group").hide();
                $("#" + formId).find("#OldValueId, #NewValueId").closest(".form-group").hide();
                $("#xhrUpload").hide();
            }
            if(model.Id>0){
                $("#" + formId).find("#OldValueId, #NewValueId").closest(".form-group").hide();

            }
            FormJs.fillOptionsDynamic($("#" + formId), "ColumnName", colDropDown, model);
            if (model.ApprovalStatus != 9) {
                $("#"+ formId).find("#RejectionRes").closest(".form-group").css("display","none");
            }
            $("#" + formId ).on("change","#ColumnName",function (e) {
                var colValue = $("#"+ formId + " #ColumnName").data("kendoDropDownList").value();
                var colValue = $(this).val();
                var EmpId = model.EmpId;

                $.get("/RenewRequest/GetColumnValue", {EmpId: EmpId, ColumnName: colValue}, function(result) {
                    console.log("ColumnName",colValue);
                    $("#" + formId).find("#OldValueId, #NewValueId").closest(".k-dropdown").remove();
                    $("#" + formId).find("#OldValueId, #NewValueId").remove();
                    if (result.colVal.Type == "select") {
                        $("#"+ formId + " #NewValue").prop("required",false);
                        $("#" + formId).find("#OldValue, #NewValue").hide();
                        oldValueParent.append('<select name="OldValueId" disabled isvisible="true" formreq="formreq" id="OldValueId" class="form-control k-valid" style="cursor: pointer; display: none;" data-role="dropdownlist">');
                        newValueParent.append('<select name="NewValueId" isvisible="true" formreq="formreq" id="NewValueId" class="form-control k-valid" style="cursor: pointer; display: none;" data-role="dropdownlist">');
                        if (colValue==="QualificationId") {
                            FormJs.fillOptionsDynamic($("#" + formId), "OldValueId", qualificationId, {OldValueId:result.colVal.Value});
                            FormJs.fillOptionsDynamic($("#" + formId), "NewValueId", qualificationId);
                        }
                        else if (colValue === "MaritalStat") {
                            FormJs.fillOptionsDynamic($("#" + formId), "OldValueId", Status, {OldValueId:result.colVal.Value});
                            FormJs.fillOptionsDynamic($("#" + formId), "NewValueId", Status);
                        }
                        else {
                            //KafeelId
                            FormJs.fillOptionsDynamic($("#" + formId), "OldValueId", kafeelId, {OldValueId:result.colVal.Value});
                            FormJs.fillOptionsDynamic($("#" + formId), "NewValueId", kafeelId);
                        }

                        $("#" + formId ).on("change","#NewValueId",function (e) {
                            //var oldValue = $("#"+ formId + " #OldValue").data("kendoDropDownList").value();
                            $("#"+ formId + " #NewValue").removeClass("k-invalid").prop("aria-invalid",false);
                            $("#"+ formId + " #NewValue").next("span.k-tooltip-validation").remove();

                            console.log("We are DropDown");
                            $("#"+ formId + " #OldValue").val($("#"+ formId + " #OldValueId").data("kendoDropDownList").text());
                            $("#"+ formId + " #NewValue").val($("#"+ formId + " #NewValueId").data("kendoDropDownList").text());
                            //$("#"+ formId + " #OldValueId").val()=Number.parseInt(oldValue);
                            //$("#"+ formId + " #NewValueId").val() =Number.parseInt(newValue);

                        });
                        //$("#" + formId).find("#OldValueId, #NewValueId").show();
                        $("#" + formId).find("#OldValueId, #NewValueId").closest(".form-group").show();
                    }
                    else {
                        $("#" + formId).find("#OldValue, #NewValue").closest(".k-dropdown").remove();
                        $("#" + formId).find("#OldValue, #NewValue").remove();

                        oldValueParent.append('<input type="text" disabled name="OldValue" isvisible="true" formreq="formreq" maxlength="250" id="OldValue" class="form-control  k-valid" aria-invalid="true">');
                        newValueParent.append('<input type="text" name="NewValue" isvisible="true" formreq="formreq" maxlength="250" id="NewValue" class="form-control  k-valid" aria-invalid="true">');
                        $("#" + formId + " #OldValue").val(result.colVal.Value);
                        $("#" + formId).find("#OldValue, #NewValue").closest(".form-group").show();

                    }



                });

            });

            $("#" + formId).find('#SaveChange').val('@MsgUtils.Instance.Trls("SaveChanges")');

            //submitRequest
            $("#" + formId).on( 'click', '#SaveChange', function (e) {
                FormJs.saveForm($("#" + formId), $(this), function (res) {
                    model=res;
                    toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                    if ($("#image_file").val() !== "") {
                        startUploading();

                    }else{
                        //$("#xhrUpload").show();
                        //$("#SaveChange").attr("disabled", true)
                    }

                    //$("#SaveChange").attr("disabled", true)
                });
            });

            $("#" + formId).find('[name="UploadSection"]').append('<div class="upload_form_cont">'+
                    '<form id="upload_form" enctype="multipart/form-data" method="post" action="/FileUpload/UploadOneFile?Source=RenewRequest&SourceId='+model.Id+'">'+
                    '<div>'+
                '<div><label for="image_file">Please select image file</label></div>'+
                '<div><input type="file" accept="image/*" file-accept="jpg png tif" name="image_file" id="image_file"  /></div>'+
            '</div>'+
            '<div>'+
                '<input id="xhrUpload" type="button" value="Upload" />'+
            '</div>'+
            '<div id="fileinfo">'+
                '<div id="filename"></div>'+
                '<div id="filesize"></div>'+
                '<div id="filetype"></div>'+
                '<div id="filedim"></div>'+
            '</div>'+
            '<div id="error">You should select valid image files only!</div>'+
            '<div id="error2">An error occurred while uploading the file</div>'+
            '<div id="abort">The upload has been canceled by the user or the browser dropped the connection</div>'+
            '<div id="warnsize">Your file is very big. We can not accept it. Please select more small file</div>'+
            '<div id="nofile">No file is Selected. Please select File to upload</div>'+

            '<div id="progress_info">'+
            '<div id="progress"></div>'+
            '<div id="progress_percent">&nbsp;</div>'+
            '<div class="clear_both"></div>'+
                '<div>'+
                    '<div id="speed">&nbsp;</div>'+
                    '<div id="remaining">&nbsp;</div>'+
                    '<div id="b_transfered">&nbsp;</div>'+
                    '<div class="clear_both"></div>'+
               ' </div>'+
                '<div id="upload_response"></div>'+
            '</div>'+
       '</form>'+

        '<img id="preview" />'+ '</div>')
            $("#xhrUpload").hide();


            /////////////////////////////////////////////////////////////////////

            $("#image_file").on("change",function () {
                //console.log("onchange file>>>>")

                // hide different warnings
                document.getElementById('upload_response').style.display = 'none';
                document.getElementById('error').style.display = 'none';
                document.getElementById('error2').style.display = 'none';
                document.getElementById('abort').style.display = 'none';
                document.getElementById('warnsize').style.display = 'none';
                document.getElementById('nofile').style.display = 'none';
                document.getElementById('fileinfo').style.display = 'none';
                // get selected file element
                var oFile = document.getElementById('image_file').files[0];
                // get preview element
                var oImage = document.getElementById('preview');

                var imgValue= $("#image_file").val();
                if (imgValue != "") {

                    // little test for filesize
                    if (oFile.size > iMaxFilesize) {
                        document.getElementById('warnsize').style.display = 'block';
                        return;
                    }



                    // prepare HTML5 FileReader
                    var oReader = new FileReader();
                    oReader.onload = function(e){

                        // e.target.result contains the DataURL which we will use as a source of the image
                        oImage.src = e.target.result;

                        oImage.onload = function () { // binding onload event

                            // we are going to display some custom image information here
                            sResultFileSize = bytesToSize(oFile.size);
                            document.getElementById('fileinfo').style.display = 'block';
                            document.getElementById('filename').innerHTML = 'Name: ' + oFile.name;
                            document.getElementById('filesize').innerHTML = 'Size: ' + sResultFileSize;
                            document.getElementById('filetype').innerHTML = 'Type: ' + oFile.type;
                            document.getElementById('filedim').innerHTML = 'Dimension: ' + oImage.naturalWidth + ' x ' + oImage.naturalHeight;
                        };
                    };

                    // read selected file as DataURL
                    oReader.readAsDataURL(oFile);
                }
                else {
                    oImage.src = "";
                    document.getElementById('nofile').style.display = 'block';

                    return;
                }


                // filter for image files
                var rFilter = /^(image\/tif|image\/jpeg|image\/png|image\/tiff)$/i;
                if (! rFilter.test(oFile.type)) {
                    document.getElementById('error').style.display = 'block';
                    return;
                }


            });

            $("#xhrUpload").on("click",function () {
                console.log("upload Click>>>>");
                // cleanup all temp states
                iPreviousBytesLoaded = 0;
                document.getElementById('upload_response').style.display = 'none';
                document.getElementById('error').style.display = 'none';
                document.getElementById('error2').style.display = 'none';
                document.getElementById('abort').style.display = 'none';
                document.getElementById('warnsize').style.display = 'none';
                document.getElementById('progress_percent').innerHTML = '';
                var oProgress = document.getElementById('progress');
                oProgress.style.display = 'block';
                oProgress.style.width = '0px';

                // get form data for POSTing
                //var vFD = document.getElementById('upload_form').getFormData(); // for FF3
                var vFD = new FormData(document.getElementById('upload_form'));

                // create XMLHttpRequest object, adding few event listeners, and POSTing our data
                var oXHR = new XMLHttpRequest();
                oXHR.upload.addEventListener('progress', uploadProgress, false);
                oXHR.addEventListener('load', uploadFinish, false);
                oXHR.addEventListener('error', uploadError, false);
                oXHR.addEventListener('abort', uploadAbort, false);
                oXHR.open('POST', '/FileUpload/UploadOneFile?Source=RenewRequest&SourceId='+model.Id+'');
                oXHR.send(vFD);

                // set inner timer
                oTimer = setInterval(doInnerUpdates, 300);
            });

            // common variables
            var iBytesUploaded = 0;
            var iBytesTotal = 0;
            var iPreviousBytesLoaded = 0;
            var iMaxFilesize = 1048576 * 6; // 1MB
            var oTimer = 0;
            var sResultFileSize = '';

            function startUploading() {
                console.log("upload Click>>>>");
                // cleanup all temp states
                iPreviousBytesLoaded = 0;
                document.getElementById('upload_response').style.display = 'none';
                document.getElementById('error').style.display = 'none';
                document.getElementById('error2').style.display = 'none';
                document.getElementById('abort').style.display = 'none';
                document.getElementById('warnsize').style.display = 'none';
                document.getElementById('progress_percent').innerHTML = '';
                var oProgress = document.getElementById('progress');
                oProgress.style.display = 'block';
                oProgress.style.width = '0px';

                // get form data for POSTing
                //var vFD = document.getElementById('upload_form').getFormData(); // for FF3
                var vFD = new FormData(document.getElementById('upload_form'));

                // create XMLHttpRequest object, adding few event listeners, and POSTing our data
                var oXHR = new XMLHttpRequest();
                oXHR.upload.addEventListener('progress', uploadProgress, false);
                oXHR.addEventListener('load', uploadFinish, false);
                oXHR.addEventListener('error', uploadError, false);
                oXHR.addEventListener('abort', uploadAbort, false);
                oXHR.open('POST', '/FileUpload/UploadOneFile?Source=RenewRequest&SourceId='+model.Id+'');
                oXHR.send(vFD);

                // set inner timer
                oTimer = setInterval(doInnerUpdates, 300);
            }

            function secondsToTime(secs) { // we will use this function to convert seconds in normal time format
                var hr = Math.floor(secs / 3600);
                var min = Math.floor((secs - (hr * 3600))/60);
                var sec = Math.floor(secs - (hr * 3600) -  (min * 60));

                if (hr < 10) {hr = "0" + hr; }
                if (min < 10) {min = "0" + min;}
                if (sec < 10) {sec = "0" + sec;}
                if (hr) {hr = "00";}
                return hr + ':' + min + ':' + sec;
            };

            function bytesToSize(bytes) {
                var sizes = ['Bytes', 'KB', 'MB'];
                if (bytes == 0) return 'n/a';
                var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
                return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];
            };

            function doInnerUpdates() { // we will use this function to display upload speed
                var iCB = iBytesUploaded;
                var iDiff = iCB - iPreviousBytesLoaded;

                // if nothing new loaded - exit
                if (iDiff == 0)
                    return;

                iPreviousBytesLoaded = iCB;
                iDiff = iDiff * 2;
                var iBytesRem = iBytesTotal - iPreviousBytesLoaded;
                var secondsRemaining = iBytesRem / iDiff;

                // update speed info
                var iSpeed = iDiff.toString() + 'B/s';
                if (iDiff > 1024 * 1024) {
                    iSpeed = (Math.round(iDiff * 100/(1024*1024))/100).toString() + 'MB/s';
                } else if (iDiff > 1024) {
                    iSpeed =  (Math.round(iDiff * 100/1024)/100).toString() + 'KB/s';
                }

                document.getElementById('speed').innerHTML = iSpeed;
                document.getElementById('remaining').innerHTML = '| ' + secondsToTime(secondsRemaining);
            }

            function uploadProgress(e) { // upload process in progress
                if (e.lengthComputable) {
                    iBytesUploaded = e.loaded;
                    iBytesTotal = e.total;
                    var iPercentComplete = Math.round(e.loaded * 100 / e.total);
                    var iBytesTransfered = bytesToSize(iBytesUploaded);

                    document.getElementById('progress_percent').innerHTML = iPercentComplete.toString() + '%';
                    document.getElementById('progress').style.width = (iPercentComplete * 4).toString() + 'px';
                    document.getElementById('b_transfered').innerHTML = iBytesTransfered;
                    if (iPercentComplete == 100) {
                        var oUploadResponse = document.getElementById('upload_response');
                        oUploadResponse.innerHTML = '<h1>Please wait...processing</h1>';
                        oUploadResponse.style.display = 'block';
                    }
                } else {
                    document.getElementById('progress').innerHTML = 'unable to compute';
                }
            }

            function uploadFinish(e) {
                // upload successfully finished
                var oUploadResponse = document.getElementById('upload_response');
                //var resMsg = JSON.parse(e.target.responseText).files[0];
                //var resMsg = e.target.responseText;
                //oUploadResponse.innerHTML = "<p>Your file: "+resMsg.name+" has been successfully received.</p><p>Type: "+resMsg.type+"</p><p>Size: "+Math.floor(((resMsg.size)/1024))+" KB</p>";
                if (e.target.responseText !== '"OK"')
                    oUploadResponse.innerHTML = "<p>" + e.target.responseText + "</p>";
                else
                    oUploadResponse.innerHTML = "<p>@MsgUtils.Instance.Trls("FileSuccessfullyUploaded")</p>";

                oUploadResponse.style.display = 'block';
                document.getElementById('progress_percent').innerHTML = '100%';
                document.getElementById('progress').style.width = '620px';
                document.getElementById('filesize').innerHTML = sResultFileSize;
                document.getElementById('remaining').innerHTML = '| 00:00:00';

                clearInterval(oTimer);
            }

            function uploadError(e) { // upload error
                console.log("uploadError",e);
                document.getElementById('error2').style.display = 'block';
                clearInterval(oTimer);
                $("#xhrUpload").show();
            }

            function uploadAbort(e) { // upload abort
                document.getElementById('abort').style.display = 'block';
                clearInterval(oTimer);
            }
            /////////////////////////////////////////////////////////////////////


        });



    })
</script>

@*function addPreview(file, wrapper) {
                    var raw = file.rawFile;
                    var reader  = new FileReader();

                    if (raw) {
                        reader.onloadend = function () {
                            var preview = $("
    <img class='image-preview'>").attr("src", this.result);

                            wrapper.find(".k-file[data-uid='" + file.uid + "'] .k-file-extension-wrapper")
                              .replaceWith(preview);
                        };

                        reader.readAsDataURL(raw);
                    }
                }
                $("#file").kendoUpload({
                    async: {

                        saveUrl: '/FileUpload/Upload',
                        removeUrl: "/RenewRequest/Remove",
                        autoUpload: true
                    },
                    multiple: false,
                    select: function(e) {
                        var fileInfo = e.files[0];
                        var wrapper = this.wrapper;

                    setTimeout(function(){
                        addPreview(fileInfo, wrapper);
                    });
                },
                upload: function (e) {
                    e.data = {
                        Source:"RenewRequest",
                        SourceId: model.Id };
                },
                remove: function (e) {
                    e.data = {
                        Source:"RenewRequest",
                        SourceId: model.Id };
                }

                });

                //$("#" + formId + " #Id").val()
                if(model.Id == 0){
                    $("#file").data("kendoUpload").disable();
                    //$("#file").attr("disabled", true);
                }else {
                    //$("#file").removeAttr("disabled");
                    $("#file").data("kendoUpload").enable();
                }

                //Open window when click
                $("#Documents").on('click', function() {
                    console.log("model.Id>>",model.Id);
                    $("#docWindow").data("kendoWindow").refresh("/FileUpload/Edit?Source=RenewRequest&SourceId=" + model.Id).center().open();
                    $("#Documents").fadeOut();
                });*@