@using WebApp.Extensions
@using System.Web.Script.Serialization
@{
    Layout = null;
    var admin = User.Identity.CanCustomize();
    var rtl = User.Identity.RTL();
    var culture = User.Identity.GetCulture();
}

<!--Employees Count-->
<div class="panel panel-default">
    <div class="panel-heading">
        <i class="fa fa-users"></i> @MsgUtils.Instance.Trls("EmployeesDeptStatistic") <span class="deptfSpan"></span>
        <div style="float:right;">
            <button id="deptsFiletrBtn" class="btn btn-success btn-circle btn-sm fa fa-refresh"></button>

            <!--Dept Filter-->
            <div class="btn-group">
                <a href="" class="btn btn-success btn-circle btn-sm dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true" aria-expanded="false">
                    @MsgUtils.Instance.Trls("Filter Department") <span class="fa fa-angle-down"></span>
                </a>
                <ul class="dropdown-menu pull-right" id="filterDept">
                    <li><a href="javascript:;" id="filterDeptItem"></a></li>
                </ul>
            </div>

        </div>
    </div>
    <div class="panel-body">
        <div id="emp-carousel" class="carousel slide" data-ride="carousel">
            <!-- Indicators -->
            <ol class="carousel-indicators">
                <li data-target="#emp-carousel" data-slide-to="0" class="active"></li>
                <li data-target="#emp-carousel" data-slide-to="1"></li>
                <li data-target="#emp-carousel" data-slide-to="2"></li>
                <li data-target="#emp-carousel" data-slide-to="3"></li>
            </ol>

            <!-- Wrapper for slides -->
            <div class="carousel-inner">
                <div class="item active">
                    <div class="col-md-6">
                        <button class="btn-xs btn-primary" onclick="Grids.ExportChart('EmpStatus')">@MsgUtils.Instance.Trls("ExportImage")</button>
                        <div class="my-border" id="EmpStatus" url="@Url.Action("EmpStatusChart", "Dashboard")">
                        </div>
                    </div>
                    <div class="col-md-6"><div class="my-border" id="EmpStatusGrid"></div></div>
                </div>
                <div class="item ">
                    <div class="col-md-6">
                        <button class="btn-xs btn-primary" onclick="Grids.ExportChart('depts')">@MsgUtils.Instance.Trls("ExportImage")</button>
                        <div class="my-border" id="depts" url="@Url.Action("EmpsByDeptsChart", "Dashboard")" >
                        </div>
                    </div>
                    <div class="col-md-6"><div class="my-border" id="deptsGrid"></div></div>
                </div>
                <div class="item">
                    <div class="col-md-6">
                        <button class="btn-xs btn-primary" onclick="Grids.ExportChart('ageDepts')">@MsgUtils.Instance.Trls("ExportImage")</button>
                        <div class="my-border" id="ageDepts" url="@Url.Action("AgesByDeptsChart", "Dashboard")">
                        </div>
                    </div>
                    <div class="col-md-6"><div class="my-border" id="ageDeptsGrid"></div></div>
                </div>
                <div class="item">
                    <div class="col-md-6">
                        <button class="btn-xs btn-primary" onclick="Grids.ExportChart('genderDepts')">@MsgUtils.Instance.Trls("ExportImage")</button>
                        <div class="my-border" id="genderDepts" url="@Url.Action("GenderByDeptsChart", "Dashboard")" >
                        </div>
                    </div>
                    <div class="col-md-6"><div class="my-border" id="genderDeptsGrid"></div></div>
                </div>
                <div class="item">
                <div class="col-md-6">
                    <button class="btn-xs btn-primary" onclick="Grids.ExportChart('locDepts')">@MsgUtils.Instance.Trls("ExportImage")</button>
                    <div class="my-border" id="locDepts" url="@Url.Action("LocsByDeptsChart", "Dashboard")" >

                    </div>
                </div>
                <div class="col-md-6"><div class="my-border" id="locDeptsGrid"></div></div>
                </div>
            </div>

            <!-- Controls -->
            <a class="left carousel-control" href="#emp-carousel" role="button" data-slide="prev"><span class="glyphicon glyphicon-chevron-left"></span></a>
            <a class="right carousel-control" href="#emp-carousel" role="button" data-slide="next"><span class="glyphicon glyphicon-chevron-right"></span></a>
        </div>
    </div>
</div>

<!--Today-->
<div class="panel panel-default">
    <div class="panel-heading">
        <i class="fa fa-dashboard"></i> @MsgUtils.Instance.Trls("Today") <span class="deptfSpan"></span>
    </div>

    <div class="panel-body">
        <div id="today-carousel" class="carousel slide" data-ride="carousel">

            <!-- Indicators -->
            <ol class="carousel-indicators">
                <li data-target="#today-carousel" data-slide-to="0" class="active"></li>
                <li data-target="#today-carousel" data-slide-to="1"></li>
                <li data-target="#today-carousel" data-slide-to="2"></li>
                <li data-target="#today-carousel" data-slide-to="3"></li>
            </ol>

            <!-- Wrapper for slides -->
            <div class="carousel-inner">
                @*<div class="item active">
                    <div class="col-md-6"><div class="my-border" id="EmpStatus"></div></div>
                    <div class="col-md-6"><div class="my-border" id="EmpStatusGrid"></div></div>
                </div>*@
                <div class="item active">
                    <div class="col-md-6">
                     <button class="btn-xs btn-primary" onclick="Grids.ExportChart('locs')">@MsgUtils.Instance.Trls("ExportImage")</button>
                    <div class="my-border" id="locs" url="@Url.Action("EmpsByBranchesChart", "Dashboard")" >

                    </div>
                    </div>
                    <div class="col-md-6"><div class="my-border" id="locsGrid"></div></div>
                </div>
                <div class="item">
                <div class="col-md-6">
                    <button class="btn-xs btn-primary" onclick="Grids.ExportChart('ages')">@MsgUtils.Instance.Trls("ExportImage")</button>
                    <div class="my-border" id="ages" url="@Url.Action("EmpAgesChart", "Dashboard")" >
                    </div>
                </div>
                <div class="col-md-6"><div class="my-border" id="agesGrid"></div></div>
                </div>
                <div class="item">
                    <div class="col-md-6">
                        <button class="btn-xs btn-primary" onclick="Grids.ExportChart('gender')">@MsgUtils.Instance.Trls("ExportImage")</button>
                    <div class="my-border" id="gender" url="@Url.Action("GenderChart", "Dashboard")" >
                    </div>
                    </div>
                    <div class="col-md-6"><div class="my-border" id="genderGrid"></div></div>
                </div>
                <div class="item">
                    <div class="col-md-6">
                        <button class="btn-xs btn-primary" onclick="Grids.ExportChart('nationality')">@MsgUtils.Instance.Trls("ExportImage")</button>
                    <div class="my-border" id="nationality" url="@Url.Action("NationalityChart", "Dashboard")" ></div></div>
                    <div class="col-md-6"><div class="my-border" id="nationalityGrid"></div></div>
                </div>
            </div>

            <!-- Controls -->
            <a class="left carousel-control" href="#today-carousel" role="button" data-slide="prev"><span class="glyphicon glyphicon-chevron-left"></span></a>
            <a class="right carousel-control" href="#today-carousel" role="button" data-slide="next"><span class="glyphicon glyphicon-chevron-right"></span></a>

        </div>
    </div>
</div>


<script>
    //var EmpsByDepts, bybranches, LocsByDepts, EmpStatus, Gender, GenderByDepts, EmpAges, AgesByDepts, Nationality
    var colors = ['#42a7ff', '#797979', '#d54c7e', '#ededed', '#B0D877', '#FFD700'];


    function empsInitial(data) {

        //-------------------------Employees By Branch-------------------------
        $("#locs").kendoChart({
            dataSource: { data: data.byBranches },
            title: { text: '@MsgUtils.Instance.Trls("CountEmpsByLocs")', align: "center" },
            legend: { position: 'bottom' },
            series: [{ type: 'pie', field: 'value', categoryField: 'category' }],
            seriesColors: colors,
            seriesDefaults: { labels: { visible: true, background: 'transparent', template: '${ value } - ${ category }' } },
            tooltip: { visible: true, template: '${ value } @MsgUtils.Instance.Trls("Employees in") ${ category }' },
            dataBound: noDataFunc
        });
        //Grids
        if ($("#locsGrid").data("kendoGrid")) $("#locsGrid").data("kendoGrid").dataSource.data(data.byBranches);
        else {
            Grids.indexGrid({
                dataSource: { data: data.byBranches },
                objectName: "nationalityDshB",
                gridName: "locsGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitLoc
            });
        }

        function detailInitLoc(e) {
            $("<div id='Loc" + e.data.Id + "'/>").appendTo(e.detailCell);
            var gridname = "'Loc" + e.data.Id + "'";
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleBranch", "Dashboard")?LocId=" + e.data.Id,
                objectName: "PeopleDetails",
                tabeName: "People",
                gridName: "Loc" + e.data.Id,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }

        //-------------------------Employees Count Statistics-------------------------
        //Employees Status
        $("#EmpStatus").kendoChart({
            dataSource: { data: data.EmpStatus },
            title: { text: '@MsgUtils.Instance.Trls("Employees Status")', align: "center" }, //, font: '20px Frutiger LT Arabic, Frutiger'
            legend: { position: 'bottom' },
            series: [{ type: 'pie', field: 'value', categoryField: 'category' }],
            seriesDefaults: { labels: { visible: true, background: 'transparent', template: '${ value } - ${ category }' } },
            tooltip: { visible: true, template: '${ value } @MsgUtils.Instance.Trls("Employees") ${ category }' },
            dataBound: noDataFunc,
            //seriesClick: function (e) {}
        });
        //Grids
        if ($("#EmpStatusGrid").data("kendoGrid")) $("#EmpStatusGrid").data("kendoGrid").dataSource.data(data.EmpStatus);
        else {
            Grids.indexGrid({
                dataSource: { data: data.EmpStatus },
                objectName: "nationalityDshB",
                gridName: "EmpStatusGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitEmpStatus
            });
        }
        //jQuery.ajaxSettings.traditional = true;
        function detailInitEmpStatus(e) {
            $("<div id='EmpStu" + e.data.Month + "'/>").appendTo(e.detailCell);
            var gridname = "'EmpStu" + e.data.Month + "'";
            $.ajax({
                url: "@Url.Action("GetEmpStutes", "Dashboard")",
                data: { Depts: selectedDepts, Stutes: e.data.Month },
                traditional: true,
                success: function (data) {
                    Grids.indexGrid({
                        dataSource: { data: data },
                        objectName: "PeopleDetails",
                        tabeName: "People",
                        gridName: "EmpStu" + e.data.Month,
                        admin: "@admin",
                        lang: "@culture",
                        height: 230,
                        groupable: false,
                        columnMenu: false,
                        pageable: false,
                        toolbar: '<div></div>'
                    });
                }
            });
            
        }
        setTimeout(function () { empSuccessFunc() }, 100);
    }

    function empSuccessFunc(data) {
        //-------------------------Employees By Department-------------------------
        $("#depts").kendoChart({
            dataSource: { data: [] },
            title: { text: '@MsgUtils.Instance.Trls("CountEmpsByDepts")', align: "center" },
            legend: { position: 'bottom' },
            series: [{ type: 'pie', field: 'value', categoryField: 'category' }], //, field: 'emps', categoryField: 'department' }],
            seriesColors: colors,
            seriesDefaults: { labels: { visible: true, background: 'transparent', template: '${ value } - ${ category }' } },
            tooltip: { visible: true, template: '${ value } @MsgUtils.Instance.Trls("Employees in") ${ category }' },
            dataBound: noDataFunc,
            chartArea: { position: 'right', align: "left" },
        });
        if ($("#deptsGrid").data("kendoGrid")) $("#deptsGrid").data("kendoGrid").dataSource.data([]);
        else {
            Grids.indexGrid({
                dataSource: { data: [] },
                objectName: "nationalityDshB",
                gridName: "deptsGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitdepts
            });
        }
        function detailInitdepts(e) {
            var isDefault = selectedDepts.length == 0;
            $("<div id='Dept" + e.data.Id + "'/>").appendTo(e.detailCell);
            var gridname = "'Dept" + e.data.Id + "'";
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleDept","Dashboard")?DeptId=" + e.data.Id + "&isDefault=" + isDefault,
                objectName: "PeopleDetails",
                tabeName: "People",
                gridName: "Dept" + e.data.Id,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }
        //-------------------------Branch & Departments-------------------------
        $("#locDepts").kendoChart({
            dataSource: { data: [], group: { field: "myGroup" }, sort: [{ field: "myGroup", dir: "asc" }, { field: "category", dir: "asc" }] },
            seriesDefaults: { type: "column", labels: { visible: true, background: "transparent" } },
            series: [{ field: "value", categoryField: "category" }],
            seriesColors: colors,
            title: { align: "center", text: '@MsgUtils.Instance.Trls("Branch By Depts")' },
            legend: { visible: true },
            tooltip: { visible: true, template: "#:value# @MsgUtils.Instance.Trls("Employees in") #:category#" },
            dataBound: noDataFunc
        });
        //Grids
        if ($("#locDeptsGrid").data("kendoGrid")) $("#locDeptsGrid").data("kendoGrid").dataSource.data([]);
        else {
            Grids.indexGrid({
                dataSource: { data: [] },
                objectName: "GenderGeptDshB",
                gridName: "locDeptsGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitLocDept
            });
        }
        function detailInitLocDept(e) {
            var isDefault = selectedDepts.length == 0;
            $("<div id='Gend" + e.data.Id + e.data.EmpId + "'/>").appendTo(e.detailCell);
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleLocDept", "Dashboard")?DeptId=" + e.data.Id + "&LocId=" + e.data.EmpId + "&isDefault=" + isDefault,
                objectName: "PeopleDetails",
                tabeName: "People",
                gridName: "Gend" + e.data.Id + e.data.EmpId,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }

        //-------------------------Gender & Person Type-------------------------
        $("#gender").kendoChart({
            dataSource: { data: [] },
            title: { text: '@MsgUtils.Instance.Trls("Gender Employment") ', align: "center" },
            legend: { position: 'bottom' },
            series: [{ type: 'pie', field: 'value', categoryField: 'category' }],// field: 'Count', categoryField: 'Status' }],
            seriesColors: colors,
            seriesDefaults: { labels: { visible: true, background: 'transparent', template: '${ value } - ${ category }' } },
            tooltip: { visible: true, template: '${ value } - ${ category }' },
            dataBound: noDataFunc
        });
        //Grids
        if ($("#genderGrid").data("kendoGrid")) $("#genderGrid").data("kendoGrid").dataSource.data([]);
        else {
            Grids.indexGrid({
                dataSource: { data: [] },
                objectName: "nationalityDshB",
                gridName: "genderGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitGender
            });
        }

        function detailInitGender(e) {
            $("<div id='Loc" + e.data.Id + e.data.EmpId + "'/>").appendTo(e.detailCell);
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleGenderAndPersonType", "Dashboard")?gender=" + e.data.Id + "&PersonType=" + e.data.EmpId,
                objectName: "PeopleDetails",
                tabeName: "People",
                gridName: "Loc" + e.data.Id + e.data.EmpId,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }

        //-------------------------Gender & Depts-------------------------
        $("#genderDepts").kendoChart({
            dataSource: { data: [], group: { field: "myGroup" }, sort: [{ field: "myGroup", dir: "asc" }, { field: "category", dir: "asc" }] },
            seriesDefaults: { type: "column", labels: { visible: true, background: "transparent" } },
            series: [{ field: "value", categoryField: "category" }],
            seriesColors: colors,
            title: { align: "center", text: '@MsgUtils.Instance.Trls("Gender By Depts")' },
            legend: { visible: true },
            tooltip: { visible: true, template: "#:value# @MsgUtils.Instance.Trls("Employees in") #:category#" },
            dataBound: noDataFunc
        });
        //Grids
        if ($("#genderDeptsGrid").data("kendoGrid")) $("#genderDeptsGrid").data("kendoGrid").dataSource.data([]);
        else {
            Grids.indexGrid({
                dataSource: { data: [] },
                objectName: "GenderGeptDshB",
                gridName: "genderDeptsGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitGenderDept
            });
        }
        function detailInitGenderDept(e) {
            var isDefault = selectedDepts.length == 0;
            $("<div id='Gend" + e.data.Gender + "'/>").appendTo(e.detailCell);
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleGenderDept", "Dashboard")?DeptId=" + e.data.Id + "&GenderId=" + e.data.Gender + "&isDefault=" + isDefault,
                objectName: "PeopleDetails",
                tabeName: "People",
                gridName: "Gend" + e.data.Gender,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }

        //-------------------------Employees Ages-------------------------
        $("#ages").kendoChart({
            dataSource: { data: [] },
            title: { text: '@MsgUtils.Instance.Trls("Employees Ages") ', align: "center" },
            legend: { position: 'left' },
            seriesColors: colors,
            series: [{ type: 'pie', field: 'value', categoryField: 'category' }],
            seriesDefaults: { labels: { visible: true, background: 'transparent', template: '${ value }' } },
            tooltip: { visible: true, template: '${ value } @MsgUtils.Instance.Trls("between") ${ category }' },
            dataBound: noDataFunc
        });
        //Grids
        if ($("#agesGrid").data("kendoGrid")) $("#agesGrid").data("kendoGrid").dataSource.data([]);
        else {
            Grids.indexGrid({
                dataSource: { data: [] },
                objectName: "nationalityDshB",
                gridName: "agesGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitAge
            });
        }
        // GetPeopleAge(string ageRange)
        function detailInitAge(e) {
            $("<div id='"+e.data.uid+"'/>").appendTo(e.detailCell);
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleAge", "Dashboard")?ageRange=" + e.data.category,
                objectName: "PeopleAgeDetails",
                tabeName: "People",
                gridName: e.data.uid,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }
        //-------------------------Ages & Depts-------------------------
        $("#ageDepts").kendoChart({
            dataSource: { data: [], group: { field: "myGroup" }, sort: [{ field: "myGroup", dir: "asc" }, { field: "category", dir: "asc" }] },
            seriesDefaults: { type: "column", labels: { visible: true, background: "transparent" } },
            series: [{ field: "value", categoryField: "category" }],
            seriesColors: colors,
            title: { align: "center", text: '@MsgUtils.Instance.Trls("Ages By Depts")' },
            legend: { visible: true },
            tooltip: { visible: true, template: "#:value# @MsgUtils.Instance.Trls("Employees in") #:category#" },
            dataBound: noDataFunc
        });
        //Grids
        if ($("#ageDeptsGrid").data("kendoGrid")) $("#ageDeptsGrid").data("kendoGrid").dataSource.data([]);
        else {
            Grids.indexGrid({
                dataSource: { data: [] },
                objectName: "GenderGeptDshB",
                gridName: "ageDeptsGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInitAgeDept
            });
        }
        function detailInitAgeDept(e) {
            var isDefault = selectedDepts.length == 0;
            $("<div id='AgeDepts" + e.data.uid + "'/>").appendTo(e.detailCell);
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleAgeDepts", "Dashboard")?DeptId=" + e.data.Id + "&AgeRange=" + e.data.myGroup + "&isDefault=" + isDefault,
                objectName: "PeopleDetails",
                tabeName: "People",
                gridName: "AgeDepts" + e.data.uid,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }
        //-------------------------Nationality-------------------------
        $("#nationality").kendoChart({
            dataSource: { data: [] },
            title: { text: '@MsgUtils.Instance.Trls("Nationality Employment") ', align: "center" },
            legend: { position: 'bottom' },
            series: [{ type: 'pie', field: 'value', categoryField: 'category' }],// field: 'Count', categoryField: 'Status' }],
            seriesColors: colors,
            seriesDefaults: { labels: { visible: true, background: 'transparent', template: '${ value } - ${ category }' } },
            tooltip: { visible: true, template: '${ value } - ${ category }' },
            dataBound: noDataFunc
        });
        //Grids
        if ($("#nationalityGrid").data("kendoGrid")) $("#nationalityGrid").data("kendoGrid").dataSource.data([]);
        else {
            Grids.indexGrid({
                dataSource: { data: [] },
                objectName: "nationalityDshB",
                gridName: "nationalityGrid",
                admin: "@admin",
                lang: "@culture",
                height: 388,
                groupable: false,
                pageable: false,
                toolbar: '<div></div>',
                detailInit: detailInit
            });
        }

        function detailInit(e) {
            $("<div id='Nation" + e.data.Id + "'/>").appendTo(e.detailCell);
            Grids.indexGrid({
                read: "@Url.Action("GetPeopleNationality", "Dashboard")?NationalityId=" + e.data.Id,
                objectName: "PeopleDetails",
                tabeName: "People",
                gridName: "Nation" + e.data.Id,
                admin: "@admin",
                lang: "@culture",
                height: 230,
                groupable: false,
                columnMenu: false,
                pageable: false,
                toolbar: '<div></div>'
            });
        }
        @*//-------------------------Lenght of service-------------------------
        $("#TotalEmpsDiv").kendoChart({
            dataSource: { data: LenghthOfService },
            seriesDefaults: { type: "column", labels: { visible: true, background: "transparent" } },
            series: [{ field: "value", template: "#:value# %" }],
            seriesColors: colors,
            title: { align: "top", text: '@MsgUtils.Instance.Trls("Lenghtofservice")' },
            legend: { visible: true },
            categoryAxis: { field: "category", majorGridLines: { visible: false }, line: { visible: true } },
            valueAxis: { max: 100, majorGridLines: { visible: true }, visible: true },
            tooltip: { visible: true, format: "{0}", template: "#:value#% @MsgUtils.Instance.Trls("In") #:category#" },
            dataBound: noDataFunc
        });

        //-------------------------HeadCount in Job-------------------------
        $("#TotalEmpsDiv").kendoChart({
            dataSource: { data: JobHead },
            seriesDefaults: { type: "column", labels: { visible: true, background: "transparent" } },
            series: [{ field: "HeadCount" }],
            seriesColors: colors,
            title: { align: "top", text: '@MsgUtils.Instance.Trls("HeadCount By Job")' },
            legend: { visible: true },
            categoryAxis: { field: "job", majorGridLines: { visible: false }, line: { visible: true } },
            valueAxis: { max: JobHead[0] === undefined ? 50 : JobHead[0].max, majorGridLines: { visible: true }, visible: true },
            tooltip: { visible: true, format: "{0}", template: "#:value# @MsgUtils.Instance.Trls("In") #:category#" },
            dataBound: noDataFunc
        });*@
    }
</script>
