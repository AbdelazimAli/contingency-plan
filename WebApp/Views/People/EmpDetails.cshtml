@using System.Web.Script.Serialization
@using WebApp.Extensions
@using Model.ViewModel.Personnel
@model EmployementViewModel

@{
    Layout = null;
    var admin = User.Identity.CanCustomize();
    var compantId = User.Identity.GetDefaultCompany();
    var culture = User.Identity.GetCulture();
    var rtl = User.Identity.RTL();
}

<link href="~/Content/fonts/Simple-Line-Icons.woff" rel="stylesheet" type="font/woff">

<style>
    .k-window-content {
        min-height: 350px;
    }
</style>

<div id="Emp"></div>

<script>
    function ContractPeriod(startDate,endDate,selectedelem){
        var days = 0;
        var yearselem =  $("#DurInYears");
        var monthelem =  $("#DurInMonths");
        var elem = $("#EndDate");
        if(endDate == null && yearselem.val() == 0 && monthelem.val() == 0)
            return;
        if(endDate != null){

            days= (endDate-startDate)/(1000*3600*24);
            if(days < 0 ){
                if(elem.next("span.k-tooltip-validation").length == 0)
                    FormJs.addFormError("EmpForm",'EndDate',"@MsgUtils.Instance.Trls("EndDateGrTStartDate")")

                if(!elem.hasClass("k-invalid"))
                    FormJs.addFormError("EmpForm",'EndDate',"@MsgUtils.Instance.Trls("EndDateGrTStartDate")")
                return ;
            }else{
                FormJs.removeFormError("EmpForm",'EndDate')
                if(selectedelem.attr('id') == "EndDate"){
                    var result =parseFloat(days/365).toFixed(2);
                    var M = result.toString().split(".");
                    var months = Math.ceil((parseInt(M[1]) *12) /100);
                    var Y = M[0];
                    yearselem.val(Y);
                    monthelem.val(months);
                    return;
                }
            }
        }

        elem.removeClass("k-invalid").prop("aria-invalid", false);
        elem.next("span.k-tooltip-validation").remove();


        if(yearselem.val() >= 0 && monthelem.val() >= 0){
            endDate = new Date(startDate);
            endDate.setYear(endDate.getFullYear() + Number(yearselem.val()));
            endDate.setMonth(endDate.getMonth() + Number(monthelem.val()));
            endDate.setDate(endDate.getDate() - 1);

            elem.data("kendoDatePicker").value(endDate);
        }
    }

    $(function () {
        var EmpCode = '@ViewBag.GenEmpCode';
        var sequence= '@Model.Sequence';
        var nationalId= '@ViewBag.nationalId';
        var formId = "EmpForm";
        var empModel = @Html.Raw((new JavaScriptSerializer()).Serialize(Model));
        var read = "@Request.QueryString["Read"]";

        $.ajax({
            async: false,
            url: "@Url.Action("ReadFormInfo","Pages")",
            type: "GET",
            dataType: "json",
            contentType: 'application/json',
            data: { objectname: 'Emp', version: "@Request.QueryString["Version"]", roleId: "@Request.QueryString["RoleId"]"},
            success: function (data) {
                data.FormAction = "@Url.Action("EmpDetails", "People")";
                data.FormId = formId;
                data.Culture = '@culture';
                data.TableName = "Employements";
                data.admin = '@admin';
                data.rtl = @rtl.ToString().ToLower();
                if(read == 1)
                    data.mode = 'show';
                var PersonType;
                $("#Emp").Forms(data, empModel);
                do_AjaxCall_WithMethod('@Url.Action("FillEmpDropdownlists", "People")', '','GET',function(data){ 
                    PersonType= data.PersonType;
                    FormJs.fillOptionsDynamic($("#" + formId), "PersonType", data.PersonType, empModel);
                    FormJs.fillOptionsDynamic($("#" + formId), "ToCountry", data.Locations, empModel);
                    FormJs.fillOptionsDynamic($("#" + formId), "FromCountry", data.Locations, empModel);
                    FormJs.fillOptionsDynamic($("#" + formId), "Curr", data.Currency, empModel);
                    FormJs.fillOptionsDynamic($("#" + formId), "SuggestJobId", data.Jobs, empModel);
                });
                
                if($("#" + formId).find("#PersonType").val() == 11)
                    $("#" + formId).find('#Profession').closest(".form-group").css("display","");
                else
                    $("#" + formId).find('#Profession').closest(".form-group").css("display","none");

                if(empModel.SysCodeId != 1)
                    $("#" + formId).find('#AutoRenew').closest(".section").css("display","none")
                else
                    $("#" + formId).find('#AutoRenew').closest(".section").css("display","")


                if(EmpCode ==1)
                {
                    $("#" + formId).find("#Code").prop('disabled','true');
                    if (empModel.Code ==null)
                       $("#" + formId).find("#Code").val(sequence);
                    else
                       $("#" + formId).find("#Code").val(empModel.Code);
                }
                else if(EmpCode ==3)
                {
                    if(empModel.Code !=null)
                        $("#" + formId).find("#Code").val(empModel.Code);
                    else
                        $("#" + formId).find("#Code").val(nationalId);
                }
                else if(EmpCode==2)
                {
                    if(empModel.Code !=null)
                        $("#" + formId).find("#Code").val(empModel.Code);
                    else
                        $("#" + formId).find("#Code").val(sequence);

                }

                var hiddenFields = "<input type='hidden' name='sequence' id='sequence' value='"+sequence+"'/>"
                hiddenFields += "<input type='hidden' name='SysCodeId' id='SysCodeId' value='"+empModel.SysCodeId+"'/>";
                $("#" + formId).append(hiddenFields);

                if(empModel.Id==0)
                {
                    $("#StartDate").val("");
                    $("#b4").css("display","none").removeAttr("accesskey");
                }
                else
                    $("#b4").css("display","").attr("accesskey","s");
                //if(empModel.Id == 0) {
                //    $("#b4").attr("disabled", true);
                //    $("#b4").removeAttr("accesskey");
                //    $("#b5").attr("accesskey","s");
                //}
                //else
                //    $("#b4").attr("disabled", false);

                $("#" + formId).on("blur","#StartDate,#DurInYears,#DurInMonths,#EndDate",null,function(e)
                {
                    var startDate = $("#" + formId).find("#StartDate").data("kendoDatePicker").value();
                    var endDate = $("#" + formId).find("#EndDate").data("kendoDatePicker").value();
                    ContractPeriod(startDate,endDate,$(this));

                });

                $("#" + formId).on("change","#PersonType",null,function(e)
                {
                   
                    var codeId= $(this).val();
                    if(codeId != "")
                    {
                        console.log(PersonType);
                        var obj = PersonType.find(a =>a.id == codeId);
                        $("#" + formId).find('#SysCodeId').val(obj.SysCodeId);

                        if(obj.SysCodeId == 5)
                            $("#" + formId).find('#Profession').closest(".form-group").css("display","");
                        else
                            $("#" + formId).find('#Profession').closest(".form-group").css("display","none");

                        if(obj.SysCodeId != 1)
                            $("#" + formId).find('#AutoRenew').closest(".section ").css("display","none")
                        else
                            $("#" + formId).find('#AutoRenew').closest(".section ").css("display","")
                    }
                });

                $("#b4").off('click').on('click', function (e) {
                    if($("#"+formId).find(".k-invalid").length > 0) return ;
                    $("#"+formId).attr("action","/People/CorrectEmpDetails/"+@Model.Id);
                    $("#"+formId).append("<input type='hidden' name='EmpId' value="+@ViewBag.Id+">");
                    FormJs.saveForm($("#" + formId), $(this), function (res) {
                        toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                        updateEmpProgress(false);
                    });

                });
                $('div[name=btnSec]').hide();

                $("#b5").off('click').on('click',function (e) {
                    if($("#"+formId).find(".k-invalid").length > 0) return ;
                    
                    $("#"+formId).attr("action","/People/UpdateEmpDetails/"+@Model.Id);
                    $("#"+formId).append("<input type='hidden' name='EmpId' value="+@ViewBag.Id+">");

                    FormJs.saveForm($("#" + formId), $(this), function (res) {
                        if (empModel.Id == 0) {
                            $('div.tab-group > div > ul > li:nth-child(2)').removeClass('current').addClass('done');
                            $('div.tab-group > div > ul > li:nth-child(3)').removeClass('disabled').addClass('active').addClass('current');
                            $("#t_EmpAttachment").click();
                        }

                        toastr.success("@MsgUtils.Instance.Trls("SaveComplete")");
                        updateEmpProgress(false);
                        $("#" + formId).find('#Merage').css("display","");

                        $("#b5").removeAttr("accesskey");
                        $("#b4").attr("accesskey","s");

                        if(res.Error != null)
                        {
                            var result = res.Error.split(',');
                            if(result[0] =="SystemWarningDocuments")
                            {
                                result.shift();
                                toastr.warning(result);
                            }
                        }
                    });
                });

                InitiatNotifyButton();
            }
        });
    });

    function InitiatNotifyButton()
    {
       
        var ID='@Model.Id';

        if(parseInt(ID)>0 )
        {
            $('#NotifyButton').show();
        }
        else
        {
            $('#NotifyButton').hide();
        }
      

        var btn=$('#NotifyButton');
        $('#NotifyButton').val('@Model.NotifyButtonLabel');
        $('#NotifyButton').off('click').on('click',function(){
            if(parseInt(ID)>0 )
            {
                var url='@Url.Action("SendNotifyLetter", "People",new {area="" })';
                var data='{"ID":'+ID+'}';

                do_AjaxCall(url,data,function(data){
            
                    if(data.Result)
                        toastr.success(data.Message);
                    else
                        toastr.error(data.Message);
                });
            }
        });
    }
</script>





