@model Model.ViewModel.Personnel.PeoplesViewModel

<div id="profile-info" class="col-md-2 col-xs-12">
    <div class="profile-img">
        <div class="cont-img" >@*data-toggle="modal" data-target="#CropPic"*@
            <img src='' id='myimage' />
            <div class="overlay">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 39">
                        <path id="Forma_1" data-name="Forma 1" class="cls-1" d="M24.021,10.317A10.666,10.666,0,1,0,34.679,20.982,10.663,10.663,0,0,0,24.021,10.317Zm0,16.566a5.989,5.989,0,1,1,5.986-5.989A5.985,5.985,0,0,1,24.021,26.883ZM40,2.966H34.549L32.477,0.709A2.436,2.436,0,0,0,30.91,0H17.133a2.431,2.431,0,0,0-1.567.708L13.5,2.966H9.528v-1.3A0.667,0.667,0,0,0,8.861,1H4.689a0.667,0.667,0,0,0-.667.668v1.3H2a2,2,0,0,0-2,2V35a4,4,0,0,0,4,4H44a4,4,0,0,0,4-4V10.973A8,8,0,0,0,40,2.966Zm3,31.029H5V7.97H40a3.005,3.005,0,0,1,3,3V33.994ZM9.527,10.384a1.984,1.984,0,1,1-1.982,1.984A1.983,1.983,0,0,1,9.527,10.384Zm14.494,7.522a2.988,2.988,0,1,1-2.985,2.988A2.986,2.986,0,0,1,24.021,17.906Z" />
                    </svg>
            </div><!-- /.overlay -->
        </div><!-- /.cont-img -->
        <div class="options">
            <div class="btns">
                @*<button value='Browse' onclick='drawPic(this,event)' id='browse' data-toggle="modal" data-target="#CropPic">
                    <!-- @MsgUtils.Instance.Trls("Browse") -->
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                        <path id="Forma_1" data-name="Forma 1" class="cls-1" d="M192,128a64,64,0,1,0-64,64A63.989,63.989,0,0,0,192,128Zm-85.333,0A21.333,21.333,0,1,1,128,149.333,21.321,21.321,0,0,1,106.667,128Zm384-128H21.333A21.333,21.333,0,0,0,0,21.333V490.666A21.333,21.333,0,0,0,21.333,512H490.666A21.333,21.333,0,0,0,512,490.667V21.334A21.332,21.332,0,0,0,490.667,0Zm-448,42.667H469.334V384H42.667V42.667ZM469.333,469.333H42.667V426.666H469.334v42.667h0ZM335.085,134.248a21.333,21.333,0,0,0-33.378,4.109l-49.942,83.237-23.346-23.346a21.334,21.334,0,0,0-30.17,0L91.582,304.915a21.333,21.333,0,0,0,30.17,30.17L213.334,243.5l48.915,48.915a21.333,21.333,0,0,0,30.17-30.17l-9.555-9.555,41.373-68.954,66.013,66.013a21.333,21.333,0,1,0,30.17-30.17Z" />
                    </svg>
                </button>*@

                @*<button type='button' onclick='drawPic(this,event)' value='Camera' id='Camera'>
                    <!-- @MsgUtils.Instance.Trls("Camera") -->
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 39">
                        <path id="Forma_1" data-name="Forma 1" class="cls-1" d="M24.021,10.317A10.666,10.666,0,1,0,34.679,20.982,10.663,10.663,0,0,0,24.021,10.317Zm0,16.566a5.989,5.989,0,1,1,5.986-5.989A5.985,5.985,0,0,1,24.021,26.883ZM40,2.966H34.549L32.477,0.709A2.436,2.436,0,0,0,30.91,0H17.133a2.431,2.431,0,0,0-1.567.708L13.5,2.966H9.528v-1.3A0.667,0.667,0,0,0,8.861,1H4.689a0.667,0.667,0,0,0-.667.668v1.3H2a2,2,0,0,0-2,2V35a4,4,0,0,0,4,4H44a4,4,0,0,0,4-4V10.973A8,8,0,0,0,40,2.966Zm3,31.029H5V7.97H40a3.005,3.005,0,0,1,3,3V33.994ZM9.527,10.384a1.984,1.984,0,1,1-1.982,1.984A1.983,1.983,0,0,1,9.527,10.384Zm14.494,7.522a2.988,2.988,0,1,1-2.985,2.988A2.986,2.986,0,0,1,24.021,17.906Z" />
                    </svg>
                </button>*@
            </div><!-- /.btns -->
        </div><!-- /.options -->
        <div class="cont-txt">
            @{
                if (Model.localName != null)
                {
                    <h3>@Model.localName</h3>
                }
                else
                {
                    if (Model.FirstName != null)
                    {
                        var lName = Model.FirstName + " " + Model.Familyname;
                        <h3>@lName</h3>
                    }
                    else
                    {
                        <h3></h3>
                    }
                }
            }
        </div><!-- /.cont-txt -->
        <div class="details">
            <label>@MsgUtils.Instance.Trls("Documents"):</label>
            <div class="progress-cont">
                <div class="progress-circle" id='docProgress'><span>@Model.Docs</span></div> 
            </div>
        </div><!-- /.progress-cont -->
        <label>@MsgUtils.Instance.Trls("Profile"):</label>
        <div class="progress-cont">
            <div class="progress-circle" id='profileProgress'><span>@Model.profileProgress</span></div>
        </div><!-- /.progress-cont -->
    </div><!-- /.details -->
</div><!-- /.profile-img -->

<div id='myModal' class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-keyboard="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">@MsgUtils.Instance.Trls("Take Photo", ViewBag.culture)</h4>
            </div>
            <div id="div_TakePhoto" class="modal-body" tabindex="0"></div>
        </div>
    </div>
</div>


<script type="text/javascript" src="~/Content/js/progressbar.js"></script>
<script>
    @*var docProgressVal=@Model.Docs/100;
    var docProgress = new ProgressBar.Circle('#docProgress', {
        color: '#36a3f7',
        trailColor: '#ddd',
        trailWidth: 1,
        duration: 2000,
        easing: 'bounce',
        strokeWidth: 6,
        from: { color: '#FFEA82', a: 0 },
        to: { color: '#716ACA', a: 1 },
        // Set default step function for all animate calls
        step: function (state, circle) {
            circle.path.setAttribute('stroke', state.color);
        }
    });
    docProgress.animate(docProgressVal);*@
    Register_myimageClick();
    ShowImageFromDatabase();

   
    


    var profileProgressVal=@Model.profileProgress/100;
    var profileProgress = new ProgressBar.Circle('#profileProgress', {
        color: '#36a3f7',
        trailColor: '#ddd',
        trailWidth: 1,
        duration: 2000,
        easing: 'bounce',
        strokeWidth: 6,
        from: { color: '#FFEA82', a: 0 },
        to: { color: '#716ACA', a: 1 },
        // Set default step function for all animate calls
        step: function (state, circle) {
            circle.path.setAttribute('stroke', state.color);
        }
    });
    profileProgress.animate(profileProgressVal)

    //$('#docProgress span').each(function () {
    //    $(this).prop('Counter',0).animate({
    //        Counter: $(this).text()
    //    }, {
    //        duration: 2000,
    //        easing: 'swing',
    //        step: function (now) {
    //            $(this).text(Math.ceil(now)+"%");
    //        }
    //    });
    //});

    //$('.progress-circle span').each(function () {
    //    $(this).prop('Counter',0).animate({
    //        Counter: $(this).text()
    //    }, {
    //        duration: 2000,
    //        easing: 'swing',
    //        step: function (now) {
    //            $(this).text(Math.ceil(now)+"%");
    //        }
    //    });
    //});

    var picUrl = "@Model.PicUrl";
    var gender = "@Model.Gender";

    if (picUrl)
        document.getElementById("myimage").src =('data:image/jpg;base64,' + picUrl);
    else if (gender == 2)
        document.getElementById("myimage").src =("/SpecialData/Photos/Fnoimage.jpg");
    else
        document.getElementById("myimage").src =("/SpecialData/Photos/noimage.jpg");

    var markup = $('#profile-info');
    var tabs = $('#menu_tabs');
    var toolBar = $('.btns-form');
    //for small window problem
    $(".tab-content").closest('.main-view').parent().prepend(markup);
    $(".tab-content").prepend(toolBar);
    $(".tab-content").prepend(tabs);

    //for ToolTip on status fa
    var empstatus = ["@MsgUtils.Instance.Trls("Not employee yet")", "@MsgUtils.Instance.Trls("Active")", "@MsgUtils.Instance.Trls("Suspended")", "@MsgUtils.Instance.Trls("Terminated")", "", "", "", "", "", "", "", "@MsgUtils.Instance.Trls("In Leave")", "@MsgUtils.Instance.Trls("New Employee")"];
    $('.imgSec .nameLbl i').each(function () {
        $(this).attr("data-toggle", "tooltip");
        $(this).attr("data-placement", "bottom");
        $(this).attr("title", empstatus[model.EmpStatus]);
        $(this).css("z-index", 2);
        $(this).tooltip();
    });

    function updateDocProgress() {
        // var docProgress = ;
        // docProgress.empty();

        // docProgress.kendoProgressBar({
        //     value: model.Docs,
        //     type: "percent",
        //     max: 100
        // });
        $("#docProgress").hover(function () {
            var me = $(this);
            $.get("@Url.Action("GetMissAttach", "People")", { Id: model.Id, Gender: model.Gender, Nationality: model.Nationality }, function (e) {
                me.popover({ content: e, container: '#docProgress', placement: "top" }).popover('show');
                // me.attr('data-content', e).data('bs.popover').setContent();
            });
        }, function () {
            $(this).mouseleave(function () {
                $(this).popover('hide');
            })
        });
    }

    function updateEmpProgress(isDoc) {
        @*if (model.Id) {
            $.get("@Url.Action("UpdateProgress", "People")", { Id: model.Id, IsDoc: isDoc, version: "@Request.QueryString["Version"]" }, function (result) {
                if (isDoc) {
                    $("#docProgress ").data("kendoProgressBar").value(result.value);
                    $("#Documents #nofdocs").text(result.attachments);
                }
                else
                    $("#profileProgress").data("kendoProgressBar").value(result.value);
            });
        }*@
    }

    function ShowImageFromDatabase()
    {
        $.get("@Url.Action("GetImage", "Pages")", { id: @Model.Id, source: "@Constants.Sources.EmployeePic" }, function (res) {
        
            if (res) document.getElementById("myimage").src = (res == false ? "/Content/Photos/systemnoimage.jpg" : 'data:image/jpg;base64,' + res);
        });
    }
    function Register_myimageClick()
    {
        $('.cont-img').off('click').on('click', function (e) {
           
            e.preventDefault();
        
            var ActionUrl = '@Url.Action("TakePhotoPartial", "People",new { EmpID =Model.Id})';
            $("#div_TakePhoto").load(ActionUrl, function (responseTxt, statusTxt, xhr) {
                if (statusTxt == "success")
                {
                    ShowModal('myModal');
                }
                if (statusTxt == "error")
                    alert("Error: " + xhr.status + ": " + xhr.statusText);
            });
        });
    }
</script>

