@using System.Web.Script.Serialization

<link href="~/Content/croppie.css" rel="stylesheet" />

<script src="~/Scripts/croppie.js"></script>

@{
    Layout = null;
}

<div>
    <form id="croppie_form" enctype="multipart/form-data" method="post">
        <div id="avatar-upload-box">
            <div class="file-input">
                <input type="file" accept="image/*" value="Choose Image" name="image_file" id="upload" />
                <div class="text">
                    <dfn>@MsgUtils.Instance.Trls("selectfile")</dfn>
                    <span>@MsgUtils.Instance.Trls("Noselectfile")</span>
                </div><!--  /.text -->
            </div>
            <div class="canvas">
                <div id="main-cropper"></div>
                <div class="text-center">
                    <div class="btns">
                        <span id="xhrUploadCroppie">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 449 342">
                            <path id="Forma_1" data-name="Forma 1" d="M142.864,270.537L35.716,163.343,0,199.074,142.864,342,449,35.732,413.284,0Z"/>
                            </svg>
                        </span>
                        <span id="xhrRotateCroppie" data-deg="-90">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 343.844 326">
                            <path id="Forma_1" data-name="Forma 1" d="M333.946,28.3A12.5,12.5,0,0,0,319.1,37.9l-9.087,42.383A162.509,162.509,0,0,0,169.778,0C80.148,0,7.229,72.882,7.229,162.47a12.5,12.5,0,0,0,25.008,0C32.237,86.666,93.937,25,169.778,25a137.522,137.522,0,0,1,118.961,68.43L247.054,84.5a12.5,12.5,0,1,0-5.24,24.442l71.558,15.327a12.5,12.5,0,0,0,14.846-9.6l15.336-71.522A12.5,12.5,0,0,0,333.946,28.3ZM321.364,146.089a12.5,12.5,0,0,0-12.084,12.9A137.5,137.5,0,0,1,176.353,300.929c-1.531.05-3.053,0.075-4.577,0.075A137.537,137.537,0,0,1,54.8,235.837l43.46,11.648a12.5,12.5,0,1,0,6.477-24.144L34.056,204.4a12.506,12.506,0,0,0-15.316,8.834L-0.211,283.883a12.5,12.5,0,0,0,24.154,6.474L34.6,250.647A162.5,162.5,0,0,0,171.769,326c1.8,0,3.6-.029,5.41-0.089A162.5,162.5,0,0,0,334.273,158.165,12.49,12.49,0,0,0,321.364,146.089Z"/>
                            </svg>
                        </span>
                        <span id="xhrCancelCroppie">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 357 357">
                            <path id="Forma_1" data-name="Forma 1" d="M357,35.7L321.3,0,178.5,142.8,35.7,0,0,35.7,142.8,178.5,0,321.3,35.7,357,178.5,214.2,321.3,357,357,321.3,214.2,178.5Z"/>
                            </svg>
                        </span>
                    </div>
                </div>

                <div id="progress_info" class="container">
                    <div class="row">
                        <div class="col-md-offset-1 col-md-9" id="progress"></div>

                        <div class="col-md-2" id="progress_percent">&nbsp;</div>
                        <div class="clear_both"></div>
                    </div>

                    <div class="row" id="speed">&nbsp;</div>
                    <div class="row" id="remaining">&nbsp;</div>
                    <div class="row" id="b_transfered">&nbsp;</div>
                    <div class="clear_both"></div>

                    <div class="row" id="upload_response"></div>
                </div>

            </div>

            <div class="msgs">
                <div class="msg" id="error">@MsgUtils.Instance.Trls("imageFileonly")</div>
                <div class="msg" id="error2">@MsgUtils.Instance.Trls("erroruploading")</div>
                <div class="msg" id="abort">@MsgUtils.Instance.Trls("cancelUploading")</div>
                <div class="msg" id="warnsize">@MsgUtils.Instance.Trls("fileisbig")</div>
            </div>
            </div><!-- /.canvas -->
        </div>
    </form>
</div>


<script>


    $(function () {

        $('.file-input input[type="file"]').change(function (e) {
            var fileName = e.target.files[0].name;
            
            // $('.file-input span').text('The file "' + fileName + '" has been selected.');

            if (fileName.length >  0){
                $('.file-input').addClass('fade-out');                
                $('.canvas').addClass('fade-in');                
            }
        });

        $('#xhrCancelCroppie').on('click',function(){
                $('.file-input').removeClass('fade-out');            
                $('.canvas').removeClass('fade-in');
        });

        $('#xhrUploadCroppie').on('click',function(){
                $('.file-input').removeClass('fade-out');            
                $('.canvas').removeClass('fade-in');
                $(this).closest('.modal').modal('hide')
        })

        var model = @Html.Raw((new JavaScriptSerializer()).Serialize(Model));
        var Source = model.Source;
        var SourceId = model.SourceId;
        // console.log("dataTemp",model);
        // console.log("dataTemp",model.Source);
        // console.log("dataTemp",model.SourceId);
        var iBytesUploaded = 0;
        var iBytesTotal = 0;
        var iPreviousBytesLoaded = 0;
        var iMaxFilesize = 6591456; // 1MB
        var oTimer = 0;
        var sResultFileSize = '';
        function HideErrorElements() {
            // hide different warnings
            // document.getElementById('upload_response').style.display = 'none';
            // document.getElementById('error').style.display = 'none';
            // document.getElementById('error2').style.display = 'none';
            // document.getElementById('abort').style.display = 'none';
            // document.getElementById('warnsize').style.display = 'none';
            $('#xhrUploadCroppie').prop('disabled', true);
            // $('#xhrCancelCroppie').prop('disabled', true);
        }
        HideErrorElements();
        function EmptyData() {
            oImage.src = "";
            pdf.src = "";
            // pdf.style.display = 'none';
            // oImage.style.display = 'none';

            // document.getElementById('nofile').style.display = 'block';
            // document.getElementById('image_file').value = '';
            // document.getElementById('fileinfo').style.display = 'none';
            // document.getElementById('progress_info').style.display = 'none';
        }

        function uploadProgress(e){ // upload process in progress
            if (e.lengthComputable) {
                iBytesUploaded = e.loaded;
                iBytesTotal = e.total;
                var iPercentComplete = Math.round(e.loaded * 100 / e.total);
                var iBytesTransfered = bytesToSize(iBytesUploaded);

                document.getElementById('progress_percent').innerHTML = iPercentComplete.toString() + '%';
                document.getElementById('progress').style.width = (iPercentComplete * 4).toString() + 'px';
                document.getElementById('b_transfered').innerHTML = iBytesTransfered;
                if (iPercentComplete == 100) {
                    var oUploadResponse = document.getElementById('upload_response');
                    oUploadResponse.innerHTML = '<h1>"@MsgUtils.Instance.Trls("processing")"</h1>';
                    oUploadResponse.style.display = 'block';
                    document.getElementById('progress_info').style.display = 'block';


                }
            }
            else {
                document.getElementById('progress').innerHTML = 'unable to compute';
            }
        }



        function uploadFinish(e) { // upload successfully finished
            var oUploadResponse = document.getElementById('upload_response');

            if (e.target.responseText !== '"OK"')
                oUploadResponse.innerHTML = "<p>" + e.target.responseText + "</p>";
            else
                oUploadResponse.innerHTML = "<p>@MsgUtils.Instance.Trls("FileSuccessfullyUploaded")</p>";

            oUploadResponse.style.display = 'block';
            document.getElementById('progress_percent').innerHTML = '100%';
            document.getElementById('progress').style.width = '620px';

            document.getElementById('remaining').innerHTML = '00:00:00';
            clearInterval(oTimer);

        }

        function uploadError(e) { // upload error
            document.getElementById('error2').style.display = 'block';
            clearInterval(oTimer);
            $("#xhrUpload").show();
        }

        function uploadAbort(e) { // upload abort
            document.getElementById('abort').style.display = 'block';
            clearInterval(oTimer);
        }

        function secondsToTime(secs) { // we will use this function to convert seconds in normal time format
            var hr = Math.floor(secs / 3600);
            var min = Math.floor((secs - (hr * 3600)) / 60);
            var sec = Math.floor(secs - (hr * 3600) - (min * 60));

            if (hr < 10) { hr = "0" + hr; }
            if (min < 10) { min = "0" + min; }
            if (sec < 10) { sec = "0" + sec; }
            if (hr) { hr = "00"; }
            return hr + ':' + min + ':' + sec;
        };

        function bytesToSize(bytes) {
            var sizes = ['Bytes', 'KB', 'MB'];
            if (bytes == 0) return 'n/a';
            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
            return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];
        };
        function doInnerUpdates() { // we will use this function to display upload speed
            var iCB = iBytesUploaded;
            var iDiff = iCB - iPreviousBytesLoaded;

            // if nothing new loaded - exit
            if (iDiff == 0)
                return;

            iPreviousBytesLoaded = iCB;
            iDiff = iDiff * 2;
            var iBytesRem = iBytesTotal - iPreviousBytesLoaded;
            var secondsRemaining = iBytesRem / iDiff;

            // update speed info
            var iSpeed = iDiff.toString() + 'B/s';
            if (iDiff > 1024 * 1024) {
                iSpeed = (Math.round(iDiff * 100 / (1024 * 1024)) / 100).toString() + 'MB/s';
            } else if (iDiff > 1024) {
                iSpeed = (Math.round(iDiff * 100 / 1024) / 100).toString() + 'KB/s';
            }

            document.getElementById('speed').innerHTML = iSpeed;
            document.getElementById('remaining').innerHTML =  secondsToTime(secondsRemaining);
        }
        var basic;
        if (Source === "CompanyLogo" ) {
            var basic = $('#main-cropper').croppie({
                viewport: { width: 396, height: 130 },
                boundary: { width: 450, height: 450 },
                showZoomer: true,
                enableZoom:true,
                enforceBoundary:false,
                enableOrientation: true,

            });
        }
        else {
            var basic = $('#main-cropper').croppie({
                viewport: { width: 180, height: 180 },
                boundary: { width: 450, height: 450 },
                showZoomer: true,
                enableZoom:true,
                enforceBoundary:false,
                enableOrientation: true,
            });
        }



        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#main-cropper').croppie('bind', {


                        url: e.target.result
                    });

                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $('#upload').on('change', function () {
            readFile(this);
            HideErrorElements();
            // document.getElementById('nofile').style.display = 'none';
            $('#xhrUploadCroppie').prop('disabled', false);

        });
        $('#xhrUploadCroppie').on('click', function (e) {
            // $('#xhrCancelCroppie').prop('disabled', false);
            e.preventDefault();
            // console.log("Done");
            iPreviousBytesLoaded = 0;
            // document.getElementById('upload_response').style.display = 'none';
            // document.getElementById('error').style.display = 'none';
            // document.getElementById('error2').style.display = 'none';
            // document.getElementById('abort').style.display = 'none';
            // document.getElementById('warnsize').style.display = 'none';
            // document.getElementById('progress_percent').innerHTML = '';
            var oProgress = document.getElementById('progress');
            oProgress.style.display = 'block';
            oProgress.style.width = '0px';

            $('#main-cropper').croppie('result', { type: 'blob', quality: 1 }).then((res) => {
                var vFD = new FormData();
                vFD.append('image_file', res);
                console.log("FormData", vFD);
                var bloody = new FileReader();
                bloody.readAsDataURL(res);
                bloody.addEventListener("load",function () {
                    document.getElementById('myimage').src = bloody.result;

                })

                // create XMLHttpRequest object, adding few event listeners, and POSTing our data
                var oXHR = new XMLHttpRequest();
                oXHR.upload.addEventListener('progress', uploadProgress, false);
                oXHR.addEventListener('load', uploadFinish, false);
                oXHR.addEventListener('error', uploadError, false);
                oXHR.addEventListener('abort', uploadAbort, false);

                //var sourceId = $("#Id").val();

                oXHR.open('POST', '/FileUpload/UploadOneFile?Source='+Source+'&SourceId=' + SourceId);
                oXHR.send(vFD);

                // set inner timer
                oTimer = setInterval(doInnerUpdates, 300);

            })

        })
        // $('#xhrCancelCroppie').on('click', function (e) {
        //     e.preventDefault();
        //     console.log("cancel");
        // })

        $("#xhrRotateCroppie").on('click', function (e) {
            e.preventDefault();
            $('#main-cropper').croppie('rotate', parseInt($(this).data('deg')));
        })

    })



</script>