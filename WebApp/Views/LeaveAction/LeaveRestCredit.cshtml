@using WebApp.Extensions
@using System.Web.Script.Serialization
@{
    Layout = null;
    var admin = User.Identity.CanCustomize();
    var rtl = User.Identity.RTL();
    var culture = User.Identity.GetCulture();
    var version = Request.QueryString["Version"];
    int dataLevel = 4, read = 0;
    int.TryParse(Request.QueryString["DataLevel"], out dataLevel);
    int.TryParse(Request.QueryString["Read"], out read);
}

<div id="RestDiv"></div>
<script>
    var LeaveTypes = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.GridLeaveTypes));
    var Periods = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.Periods));
    var TransType = @Html.Raw((new JavaScriptSerializer()).Serialize(ViewBag.TransType));
    Grids.indexGrid({
        read: "@Url.Action("ReadRestBalance", "LeaveAction")",
        del: "@Url.Action("DeleteRestBalance", "LeaveAction")",
        objectName: "LeaveAdjust",
        recordName: "Employee",
        gridName: "RestDiv",
        admin: "@admin",
        lang: "@User.Identity.GetCulture()",
        columns: [{ field: "TypeId", values: LeaveTypes },{ field: "PeriodId", values: Periods },{field:"TransType",values:TransType}],
        select: { "TypeId": LeaveTypes ,"PeriodId":Periods,"TransType":TransType},
        toolbar: kendo.template($("#Newtemplate").html())
    });


    function addRestBalance()
    {
        $('#renderbody').load("@Url.Action("AddRestAdjustment", "LeaveAction")?RoleId=@Request.QueryString["RoleId"]&Version=@Request.QueryString["Version"]&DataLevel=@Request.QueryString["DataLevel"]&Read=@Request.QueryString["Read"]");
    };

</script>
<script type="text/x-kendo-template" id="Newtemplate">
    <div style="@(rtl ? "float: right" : "float: left")">
        <a id="addRest" class="btn btn-default glyphicon glyphicon-plus " onclick="addRestBalance()" style="@(dataLevel < 2 || read == 1 ? "display: none" : "")" accesskey="a"><span>&nbsp;@MsgUtils.Instance.Trls("Add New Adjustment")</span></a>
        &nbsp;
        <div class="btn-group">
            <button type="button" class="btn btn-default glyphicon glyphicon-cog dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" id="toolsMenu">
                @if (admin)
                {
                    <li><a class="glyphicon glyphicon-floppy-save" onclick="Grids.saveGrid('RestDiv')"><span>&nbsp; @MsgUtils.Instance.Trls("SaveGrid")</span></a></li>
                }
                <li><a class="glyphicon glyphicon-trash" onclick="Grids.resetGrid('RestDiv')"><span>&nbsp; @MsgUtils.Instance.Trls("ResetGrid")</span></a></li>
            </ul>
        </div>
    </div>
</script>




